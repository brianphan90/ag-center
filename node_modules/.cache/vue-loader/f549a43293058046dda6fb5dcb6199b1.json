{"remainingRequest":"/Users/brianphan/jets/kf-grower-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brianphan/jets/kf-grower-portal/src/views/app/VarietySummary.vue?vue&type=style&index=0&id=0f036cb4&lang=scss&scoped=true&","dependencies":[{"path":"/Users/brianphan/jets/kf-grower-portal/src/views/app/VarietySummary.vue","mtime":1620066313730},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZW50aXR5LXN1bW1hcnl7CgloZWlnaHQ6IDg4JTsKfQo="},{"version":3,"sources":["VarietySummary.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA","file":"VarietySummary.vue","sourceRoot":"src/views/app","sourcesContent":["<template lang=\"pug\">\n\tb-container.summary-view(fluid v-if=\"!showEmail\")\n\t\tb-row.header(align-v=\"center\")\n\t\t\tb-col\n\t\t\t\th1.title Variety Summary\n\t\t\t\th6.sub-title {{getContractName}}\n\t\tb-row.button-section(align-v=\"center\")\n\t\t\tb-col\n\t\t\t\tb-button.btn.dark-btn.mr-3(@click=\"toggleEmail\")\n\t\t\t\t\tspan.pr-2.align-middle\n\t\t\t\t\t\tBIconEnvelope\n\t\t\t\t\t| Email\n\t\t\t\tb-button.btn\n\t\t\t\t\tspan.pr-2.align-middle\n\t\t\t\t\t\tBIconDownload\n\t\t\t\t\t| Save\n\t\tb-row.chart-section\n\t\t\tb-col\n\t\t\t\tGraphCardDeck(:chartData='finalChartData')\n\tEmail(v-else :only-title=\"this.$route.name\" email-page-type=\"summary\" :email-type=\"this.$route.name\")\n</template>\n\n<style lang=\"scss\" scoped>\n.entity-summary{\n\theight: 88%;\n}\n</style>\n\n<script>\nimport BarChart from '@/components/charts/BarChart';\nimport StackedBarChart from '@/components/charts/StackedBarChart';\nimport colors from '@/assets/js/colors';\nimport Swiper, { Navigation, Pagination } from 'swiper';\nimport SbarChart from '@/components/charts/fBarChart';\nimport { BIconDownload, BIconEnvelope } from 'bootstrap-vue';\nimport GraphCardDeck from '@/components/GraphCardDeck';\nimport Email from '@/components/Email';\n\n\nexport default {\n\tname       : 'variety-summary',\n\tcomponents : {\n\t\tBIconDownload,\n\t\tBIconEnvelope,\n\t\tBarChart,\n\t\tEmail,\n\t\tStackedBarChart,\n\t\tSbarChart,\n\t\tGraphCardDeck\n\t},\n\n\tcomputed : {\n\t\tgetSelectedContractNum() {\n\t\t\treturn this.$store.getters.selectedContract.contractNum.toString();\n\t\t},\n\t\tgetVarietySummaryData() {\n\t\t\treturn this.$store.getters.varietySummaryData;\n\t\t},\n\t\tgetContractName() {\n\t\t\tconst name = this.$store.getters.selectedContract.contractName;\n\t\t\treturn name;\n\t\t},\n\t},\n\n\tmethods : {\n\t\tinitSwiper() {\n\t\t\tconst self = this;\n\t\t\tconst { swiper } = this.$refs;\n\t\t\tSwiper.use( [Navigation, Pagination] );\n\t\t\tthis.swiper = new Swiper( swiper, {\n\t\t\t\t// auto initialize this swiper\n\t\t\t\tinit         : true,\n\t\t\t\tinitialSlide : this.activeSlide,\n\n\t\t\t\t// swiper settings\n\t\t\t\tslidesPerView : 1,\n\t\t\t\tdirection     : 'horizontal',\n\t\t\t\tpagination    : {\n\t\t\t\t\tel   : '.swiper-pagination',\n\t\t\t\t\ttype : 'bullets'\n\t\t\t\t},\n\t\t\t\ton : {\n\t\t\t\t\tslideChangeTransitionEnd() {\n\t\t\t\t\t\tself.activeSlide = this.activeIndex;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\ttoggleEmail() {\n\t\t\tthis.showEmail = !this.showEmail;\n\t\t},\n\t\tTotalPoundsProduced() {\n\t\t},\n\t\tInsectQuery() {\n\n\t\t},\n\t\tQualityQuery() {\n\t\t},\n\t\tQueryAll() {\n\t\t},\n\t\tGrabUpdatedData() {\n\t\t\tconst data = this.$store.getters.varietySummaryData;\n\t\t\treturn data;\n\t\t},\n\t\t// getQualitySummary(){\n\n\t\t// },\n\t\tgetPayableYieldData() {\n\t\t\tconst yields = this.chartData.PayableYield.chartData.map( ( item ) => {\n\t\t\t\tconst data = item.data.map( v => ( {\n\t\t\t\t\tvalue      : v.TotalPayable,\n\t\t\t\t\tlabel      : v.Variety,\n\t\t\t\t\tbarColor   : colors.colorSecondary,\n\t\t\t\t\tlabelColor : colors.colorSecondary\n\t\t\t\t} ) );\n\t\t\t\treturn {\n\t\t\t\t\tyear : item.year,\n\t\t\t\t\tdata\n\t\t\t\t};\n\t\t\t} );\n\t\t\treturn ( {\n\t\t\t\tallData : yields,\n\t\t\t\toptions : {\n\t\t\t\t\thasBarLabels : true\n\t\t\t\t},\n\t\t\t\tmultipleYears : true,\n\t\t\t\ttitle         : 'Payable Yield',\n\t\t\t\tsubtitle      : 'This is the payable yield for the selected years for all the variety',\n\t\t\t\ttype          : 'barChart'\n\t\t\t} );\n\t\t},\n\t\tgetQualitySummaryData() {\n\t\t\t// missing sprocs to retrieve data\n\t\t\tconst qs = this.chartData.QualitySummary;\n\t\t\tconst toRet = qs.chartData.map( ( item ) => {\n\t\t\t\tconst data = item.data.map( d => ( {\n\t\t\t\t\tvalues : {\n\t\t\t\t\t\tCSEdible         : d.CSEdible,\n\t\t\t\t\t\tNetShellingStock : d.NetShellingStock,\n\t\t\t\t\t\tNetSplitInshell  : d.NetSplitInshell\n\n\t\t\t\t\t},\n\t\t\t\t\tlabel : `Field ${d.Variety}`,\n\t\t\t\t} ) );\n\t\t\t\treturn ( {\n\t\t\t\t\tdata,\n\t\t\t\t\tyear : item.year\n\t\t\t\t} );\n\t\t\t} );\n\t\t\treturn ( {\n\t\t\t\ttitle    : qs.title,\n\t\t\t\tsubtitle : qs.subtitle,\n\t\t\t\toptions  : {\n\t\t\t\t\thasBarLabels : false\n\t\t\t\t},\n\t\t\t\ttype          : 'stackedBarChart',\n\t\t\t\tmultipleYears : true,\n\t\t\t\tallData       : toRet,\n\t\t\t\tlegend        : {\n\t\t\t\t\tCSEdible : {\n\t\t\t\t\t\tcolor : '#E5BF11',\n\t\t\t\t\t\tlabel : 'Closed Shell',\n\t\t\t\t\t\torder : 1\n\t\t\t\t\t},\n\t\t\t\t\tNetShellingStock : {\n\t\t\t\t\t\tcolor : '#F8A79E',\n\t\t\t\t\t\tlabel : 'Shelling Stock',\n\t\t\t\t\t\torder : 3\n\t\t\t\t\t},\n\t\t\t\t\tNetSplitInshell : {\n\t\t\t\t\t\tcolor : '#89B831',\n\t\t\t\t\t\tlabel : 'Split InShell',\n\t\t\t\t\t\torder : 2\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\tgetInsectDamageData() {\n\t\t\tconst id = this.chartData.InsectDamage;\n\t\t\tconst yields = id.chartData.map( ( item ) => {\n\t\t\t\tconst data = item.data.map( v => ( {\n\t\t\t\t\tvalue      : v.Insect,\n\t\t\t\t\tlabel      : v.Variety,\n\t\t\t\t\tbarColor   : '#E8C528',\n\t\t\t\t\tlabelColor : '#E8C528'\n\t\t\t\t} ) );\n\t\t\t\treturn {\n\t\t\t\t\tyear : item.year,\n\t\t\t\t\tdata\n\t\t\t\t};\n\t\t\t} );\n\t\t\treturn ( {\n\t\t\t\tallData : yields,\n\t\t\t\toptions : {\n\t\t\t\t\thasBarLabels : true\n\t\t\t\t},\n\t\t\t\tmultipleYears : true,\n\t\t\t\ttitle         : id.title,\n\t\t\t\tsubtitle      : id.subtitle,\n\t\t\t\ttype          : 'barChart'\n\t\t\t} );\n\t\t},\n\t},\n\n\tcreated() {\n\t\t/*\n\t\tconst args = {\n\t\t\tContractNum : this.getSelectedContractNum,\n\t\t\tCropYear    : this.cropYearArg\n\t\t};\n\t\tthis.$store.dispatch( 'setEntitySummaryDataPayableYield', this.getSelectedContractNum );\n\t\tthis.$store.dispatch( 'setEntitySummaryDataQualitySummary', args );\n\t\tthis.$store.dispatch( 'setEntitySummaryDataInsectDamage', args );\n\t\t*/\n\t\tconst args = {\n\t\t\tContractNum : this.getSelectedContractNum,\n\t\t\tCropYear    : this.cropYearArg\n\t\t};\n\t\t// if ( this.getVarietySummaryData.PayableYield.chartData.length < 1 ) {\n\t\t// \tthis.$store.dispatch( 'setVarietySummaryDataPayableYield', args );\n\t\t// }\n\t\tthis.chartData = this.GrabUpdatedData();\n\t\tthis.PayableYieldData = this.getPayableYieldData();\n\t\tthis.InsectDamage = this.getInsectDamageData();\n\t\tthis.QualitySummary = this.getQualitySummaryData();\n\t\tthis.finalChartData = [this.PayableYieldData, this.InsectDamage, this.QualitySummary];\n\t},\n\n\tmounted() {\n\t\tthis.$nextTick( () => {\n\t\t\tthis.initSwiper();\n\t\t} );\n\t},\n\twatch : {\n\t\tPayableYieldYear() {\n\t\t\tthis.PayableYieldData = this.getPayableYieldData();\n\t\t}\n\t},\n\t// were gonna need to sync our props along with our queries when summary filters\n\n\tdata : () => ( {\n\t\ttotalPoundsProducedRes : null,\n\t\tinsectQueryRes         : null,\n\t\tqualityQueryRes        : null,\n\t\tPayableYieldYear       : 2018,\n\t\tQualitySummary         : '',\n\t\tInsectDamage           : '',\n\t\tcropYearArg            : '2020',\n\t\tchartData              : null,\n\t\tPayableYieldData       : null,\n\t\tfinalChartData         : null,\n\t\toptions                : [\n\t\t\t{ value : 2018, text : '2018' },\n\t\t\t{ value : 2019, text : '2019' },\n\t\t\t{ value : 2020, text : '2020' }\n\t\t],\n\t\tswiper      : null,\n\t\tactiveSlide : 0,\n\t\tshowEmail   : false,\n\t} ),\n};\n</script>\n\n<style lang=\"scss\"scoped>\n.barChart{\n\tmargin:auto;\n\twidth: 100%;\n\theight: 70%;\n\tdisplay: flex;\n\n\n}\n.summary-view {\n\tbackground: #f1f9f5;\n\tcolor: #026a44;\n\tfont-family: Bitter;\n\theight: 88%;\n}\n.barhart {\n\tbackground: #CCFFCC;\n}\n.header {\n\ttext-align: left;\n\theight: 25%;\n\tbackground: $color;\n\t.title {\n\t\ttext-align: left;\n\t\tfont-weight: bold;\n\t\tfont-size: 36px;\n\t\tfont-family: Bitter;\n\t}\n\t.sub-title {\n\t\tfont-weight: bold;\n\t\tfont-size: 24px;\n\t\tline-height: 100%;\n\t\tfont-family: Bitter;\n\t}\n}\n.button-section {\n\theight: 10%;\n\ttext-align: left;\n\tmargin-top: -34px;\n\tmargin-bottom: 20px;\n}\n.chart-section {\n\theight: 65%;\n}\n.btn {\n\tbackground: $color-secondary;\n\tbox-shadow: 0px 2px 15px rgba(14, 51, 63, 0.15), 0px 2px 3px rgba(14, 51, 63, 0.15);\n\tborder-radius: 50px;\n\twidth: 135px;\n\theight: 50px;\n\tfont-family: Manjari;\n\tborder: none;\n\tfont-size: 17px;\n}\n.btn:hover,\n.btn:active,\n.btn:focus {\n\tbackground: $color-primary;\n}\n.dark-btn{\n\tbackground: $color-primary\n}\n.graph-card {\n\tbackground: $color;\n\tborder-radius: 20px;\n}\n.swiper-container {\n\theight: 95%;\n}\n.swiper-wrapper {\n\theight: 85%;\n}\n.chart-title {\n\tfont-family: Manjari;\n\tfont-style: normal;\n\tfont-weight: bold;\n\tfont-size: 30px;\n\tline-height: 30px;\n\talign-items: center;\n\tcolor: #5A726A;\n\tpadding-top: 20px;\n}\n.chart-sub-title {\n\tfont-family: Manjari;\n\tfont-style: normal;\n\tfont-weight: bold;\n\tfont-size: 12px;\n\tline-height: 12px;\n\talign-items: center;\n\tcolor: #5A726A;\n\tpadding-top: 0px;\n}\n</style>\n"]}]}
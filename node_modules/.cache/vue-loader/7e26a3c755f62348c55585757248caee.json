{"remainingRequest":"/Users/brianphan/jets/kf-grower-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brianphan/jets/kf-grower-portal/src/components/ChartLegend.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brianphan/jets/kf-grower-portal/src/components/ChartLegend.vue","mtime":1615337765259},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKCW5hbWUgIDogJ2NoYXJ0LWxlZ2VuZCcsCglwcm9wcyA6IHsKCQlsZWdlbmQgOiB7CgkJCXR5cGUgICAgIDogW09iamVjdCwgQXJyYXldLAoJCQlyZXF1aXJlZCA6IHRydWUsCgkJfSwKCQljb2x1bW5zIDogewoJCQl0eXBlICAgIDogW051bWJlciwgU3RyaW5nXSwKCQkJZGVmYXVsdCA6IDQsCgkJfQoJfSwKCWNvbXB1dGVkIDogewoJCWdyaWRUZW1wbGF0ZUNvbHVtbnMoKSB7CgkJCWlmICggdHlwZW9mIHRoaXMuY29sdW1ucyA9PT0gJ3N0cmluZycgKSB7CgkJCQlyZXR1cm4gdGhpcy5jb2x1bW5zOwoJCQl9CgkJCWxldCBzdHIgPSAnJzsKCQkJZm9yICggbGV0IGkgPSAwOyBpIDwgdGhpcy5jb2x1bW5zOyBpICs9IDEgKSB7CgkJCQlzdHIgKz0gJ2F1dG8nOwoJCQkJaWYgKCBpIDwgKCB0aGlzLmNvbHVtbnMgLSAxICkgKSB7CgkJCQkJc3RyICs9ICcgJzsKCQkJCX0KCQkJfQoJCQlyZXR1cm4gc3RyOwoJCX0sCgkJbnVtYmVyT2ZDb2x1bW5zKCkgewoJCQlyZXR1cm4gdGhpcy5ncmlkVGVtcGxhdGVDb2x1bW5zLnNwbGl0KCAnICcgKS5sZW5ndGg7CgkJfSwKCQlzaGFwZWRJdGVtS2V5cygpIHsKCQkJaWYgKCBBcnJheS5pc0FycmF5KCB0aGlzLmxlZ2VuZCApICkgewoJCQkJcmV0dXJuIHRoaXMubGVnZW5kLm1hcCggKCBpdGVtLCBpICkgPT4gaSApCgkJCQkJLnNvcnQoICggYSwgYiApID0+IGEub3JkZXIgLSBiLm9yZGVyICk7CgkJCX0KCQkJcmV0dXJuIE9iamVjdC5rZXlzKCB0aGlzLmxlZ2VuZCApLmZpbHRlcigga2V5ID0+ICF0aGlzLmxlZ2VuZFtrZXldLnRpdGxlICkKCQkJCS5zb3J0KCAoIGEsIGIgKSA9PiBhLm9yZGVyIC0gYi5vcmRlciApOwoJCX0sCgkJcmVtYWluZGVySW5GaW5hbFJvdygpIHsKCQkJcmV0dXJuIHRoaXMuc2hhcGVkSXRlbUtleXMubGVuZ3RoICUgdGhpcy5udW1iZXJPZkNvbHVtbnM7CgkJfSwKCQludW1iZXJPZlJvd3NPZlNoYXBlZEl0ZW1zKCkgewoJCQlyZXR1cm4gdGhpcy5udW1iZXJPZkZ1bGxSb3dzT2ZTaGFwZWRJdGVtcyArICggdGhpcy5yZW1haW5kZXJJbkZpbmFsUm93ID8gMSA6IDAgKTsKCQl9LAoJCW51bWJlck9mRnVsbFJvd3NPZlNoYXBlZEl0ZW1zKCkgewoJCQlyZXR1cm4gTWF0aC5mbG9vciggdGhpcy5zaGFwZWRJdGVtS2V5cy5sZW5ndGggLyB0aGlzLm51bWJlck9mQ29sdW1ucyApOwoJCX0sCgkJc2hhcGVkSXRlbXMoKSB7CgkJCWNvbnN0IHsgbnVtYmVyT2ZDb2x1bW5zIH0gPSB0aGlzOwoJCQljb25zdCBzaGFwZWRJdGVtcyA9IFtdOwoJCQkvLyB0aGUgaWRlYSBpcyB0aGF0IHdlIHdhbnQgdGhlIGl0ZW1zIHRvIGRpc3BsYXkgdG9wIHRvIGJvdHRvbSBtb3ZpbmcKCQkJLy8gb24gdG8gYW5vdGhlciBjb2x1bW4gb25jZSB0aGUgZmlyc3QgY29sdW1uIGlzIGZpbmlzaGVkIGluc3RlYWQgb2YKCQkJLy8gdGhlIGRlZmF1bHQgbW92aW5nIGZyb20gb25lIHJvdyB0byB0aGUgbmV4dCBhZnRlciB0aGUgcm93IGlzIGZpbGxlZAoJCQlmb3IgKCBsZXQgaSA9IDA7IGkgPCB0aGlzLnNoYXBlZEl0ZW1LZXlzLmxlbmd0aDsgaSArPSAxICkgewoJCQkJY29uc3QgY29sTnVtICAgICA9ICggaSAlIG51bWJlck9mQ29sdW1ucyApOwoJCQkJY29uc3Qgcm93TnVtICAgICA9IE1hdGguZmxvb3IoIGkgLyBudW1iZXJPZkNvbHVtbnMgKTsKCQkJCWxldCBkZXNpcmVkSW5kZXggPSAoIGNvbE51bSAqIHRoaXMubnVtYmVyT2ZGdWxsUm93c09mU2hhcGVkSXRlbXMgKSArIHJvd051bTsKCQkJCWlmICggdGhpcy5yZW1haW5kZXJJbkZpbmFsUm93ICYmICggY29sTnVtICsgMSApID4gdGhpcy5yZW1haW5kZXJJbkZpbmFsUm93ICkgewoJCQkJCWRlc2lyZWRJbmRleCArPSAxOwoJCQkJfQoJCQkJc2hhcGVkSXRlbXMucHVzaCggdGhpcy5sZWdlbmRbdGhpcy5zaGFwZWRJdGVtS2V5c1tkZXNpcmVkSW5kZXhdXSApOwoJCQl9CgoJCQlyZXR1cm4gc2hhcGVkSXRlbXM7CgkJfSwKCQl0aXRsZWRJdGVtcygpIHsKCQkJaWYgKCBBcnJheS5pc0FycmF5KCB0aGlzLmxlZ2VuZCApICkgewoJCQkJcmV0dXJuIHRoaXMubGVnZW5kLmZpbHRlciggaXRlbSA9PiBpdGVtLnRpdGxlICkKCQkJCQkuc29ydCggKCBhLCBiICkgPT4gYS5vcmRlciAtIGIub3JkZXIgKTsKCQkJfQoJCQljb25zdCBrZXlzID0gT2JqZWN0LmtleXMoIHRoaXMubGVnZW5kICk7CgkJCXJldHVybiBrZXlzLmZpbHRlcigga2V5ID0+IHRoaXMubGVnZW5kW2tleV0udGl0bGUgKQoJCQkJLm1hcCgga2V5ID0+IHRoaXMubGVnZW5kW2tleV0gKQoJCQkJLnNvcnQoICggYSwgYiApID0+IGEub3JkZXIgLSBiLm9yZGVyICk7CgkJfQoJfSwKCW1ldGhvZHMgOiB7CgkJZ2V0U3R5bGUoIGl0ZW0gKSB7CgkJCWlmICggaXRlbS5zdHlsZSA9PT0gJ3N0cmlwZWQnICkgewoJCQkJcmV0dXJuIHsKCQkJCQlib3JkZXIgICAgIDogYDJweCBzb2xpZCAke2l0ZW0uY29sb3J9YCwKCQkJCQliYWNrZ3JvdW5kIDogYHJlcGVhdGluZy1saW5lYXItZ3JhZGllbnQoCgkJCQkJCXRyYW5zcGFyZW50IDRweCwKCQkJCQkJJHtpdGVtLmNvbG9yfSA0cHgsCgkJCQkJCSR7aXRlbS5jb2xvcn0gNXB4LAoJCQkJCQl0cmFuc3BhcmVudCA1cHgsCgkJCQkJCXRyYW5zcGFyZW50IDdweCwKCQkJCQkJJHtpdGVtLmNvbG9yfSA3cHgsCgkJCQkJCSR7aXRlbS5jb2xvcn0gOHB4CgkJCQkJKWAKCQkJCX07CgkJCX0KCQkJcmV0dXJuIHsKCQkJCWJhY2tncm91bmRDb2xvciAgIDogaXRlbS5jb2xvciwKCQkJCWJvcmRlckJvdHRvbUNvbG9yIDogaXRlbS5jb2xvcgoJCQl9OwoJCX0sCgl9LAp9Owo="},{"version":3,"sources":["ChartLegend.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ChartLegend.vue","sourceRoot":"src/components","sourcesContent":["<template lang='pug'>\nlegend(:style='{ gridTemplateColumns }')\n\t.item(v-for='item in shapedItems')\n\t\t.shape(\n\t\t\t:class='[item.shape || \"square\", item.style]'\n\t\t\t:style='getStyle( item )'\n\t\t)\n\t\tlabel.dynamic-mode-text {{ item.label }}\n\t.item.titled-legend-item(\n\t\tv-for='( item, i ) in titledItems'\n\t\t:style='{ gridRowStart : numberOfRowsOfShapedItems + i + 1, gridColumn : `1 / ${numberOfColumns + 1}` }'\n\t)\n\t\tp.legend-item-title.dynamic-mode-text {{ item.title }}\n\t\tlabel.dynamic-mode-text {{ item.label }}\n</template>\n\n<script>\nexport default {\n\tname  : 'chart-legend',\n\tprops : {\n\t\tlegend : {\n\t\t\ttype     : [Object, Array],\n\t\t\trequired : true,\n\t\t},\n\t\tcolumns : {\n\t\t\ttype    : [Number, String],\n\t\t\tdefault : 4,\n\t\t}\n\t},\n\tcomputed : {\n\t\tgridTemplateColumns() {\n\t\t\tif ( typeof this.columns === 'string' ) {\n\t\t\t\treturn this.columns;\n\t\t\t}\n\t\t\tlet str = '';\n\t\t\tfor ( let i = 0; i < this.columns; i += 1 ) {\n\t\t\t\tstr += 'auto';\n\t\t\t\tif ( i < ( this.columns - 1 ) ) {\n\t\t\t\t\tstr += ' ';\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn str;\n\t\t},\n\t\tnumberOfColumns() {\n\t\t\treturn this.gridTemplateColumns.split( ' ' ).length;\n\t\t},\n\t\tshapedItemKeys() {\n\t\t\tif ( Array.isArray( this.legend ) ) {\n\t\t\t\treturn this.legend.map( ( item, i ) => i )\n\t\t\t\t\t.sort( ( a, b ) => a.order - b.order );\n\t\t\t}\n\t\t\treturn Object.keys( this.legend ).filter( key => !this.legend[key].title )\n\t\t\t\t.sort( ( a, b ) => a.order - b.order );\n\t\t},\n\t\tremainderInFinalRow() {\n\t\t\treturn this.shapedItemKeys.length % this.numberOfColumns;\n\t\t},\n\t\tnumberOfRowsOfShapedItems() {\n\t\t\treturn this.numberOfFullRowsOfShapedItems + ( this.remainderInFinalRow ? 1 : 0 );\n\t\t},\n\t\tnumberOfFullRowsOfShapedItems() {\n\t\t\treturn Math.floor( this.shapedItemKeys.length / this.numberOfColumns );\n\t\t},\n\t\tshapedItems() {\n\t\t\tconst { numberOfColumns } = this;\n\t\t\tconst shapedItems = [];\n\t\t\t// the idea is that we want the items to display top to bottom moving\n\t\t\t// on to another column once the first column is finished instead of\n\t\t\t// the default moving from one row to the next after the row is filled\n\t\t\tfor ( let i = 0; i < this.shapedItemKeys.length; i += 1 ) {\n\t\t\t\tconst colNum     = ( i % numberOfColumns );\n\t\t\t\tconst rowNum     = Math.floor( i / numberOfColumns );\n\t\t\t\tlet desiredIndex = ( colNum * this.numberOfFullRowsOfShapedItems ) + rowNum;\n\t\t\t\tif ( this.remainderInFinalRow && ( colNum + 1 ) > this.remainderInFinalRow ) {\n\t\t\t\t\tdesiredIndex += 1;\n\t\t\t\t}\n\t\t\t\tshapedItems.push( this.legend[this.shapedItemKeys[desiredIndex]] );\n\t\t\t}\n\n\t\t\treturn shapedItems;\n\t\t},\n\t\ttitledItems() {\n\t\t\tif ( Array.isArray( this.legend ) ) {\n\t\t\t\treturn this.legend.filter( item => item.title )\n\t\t\t\t\t.sort( ( a, b ) => a.order - b.order );\n\t\t\t}\n\t\t\tconst keys = Object.keys( this.legend );\n\t\t\treturn keys.filter( key => this.legend[key].title )\n\t\t\t\t.map( key => this.legend[key] )\n\t\t\t\t.sort( ( a, b ) => a.order - b.order );\n\t\t}\n\t},\n\tmethods : {\n\t\tgetStyle( item ) {\n\t\t\tif ( item.style === 'striped' ) {\n\t\t\t\treturn {\n\t\t\t\t\tborder     : `2px solid ${item.color}`,\n\t\t\t\t\tbackground : `repeating-linear-gradient(\n\t\t\t\t\t\ttransparent 4px,\n\t\t\t\t\t\t${item.color} 4px,\n\t\t\t\t\t\t${item.color} 5px,\n\t\t\t\t\t\ttransparent 5px,\n\t\t\t\t\t\ttransparent 7px,\n\t\t\t\t\t\t${item.color} 7px,\n\t\t\t\t\t\t${item.color} 8px\n\t\t\t\t\t)`\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tbackgroundColor   : item.color,\n\t\t\t\tborderBottomColor : item.color\n\t\t\t};\n\t\t},\n\t},\n};\n</script>\n\n<style lang='scss'>\nlegend {\n\tdisplay: grid;\n\tgrid-column-gap: 10px;\n\tgrid-row-gap: 5px;\n\t.item {\n\t\tdisplay: flex;\n\t\t// align-items: center;\n\t\t&:not(.titled-legend-item) + .titled-legend-item {\n\t\t\tmargin-top: 15px;\n\t\t}\n\t\t.shape {\n\t\t\tmargin-right: 10px;\n\t\t}\n\t\tp,\n\t\tlabel {\n\t\t\ttext-align: left;\n\t\t\tfont-size: 12px;\n\t\t}\n\t\tp {\n\t\t\tfont-weight: 600;\n\t\t}\n\t\tp + label {\n\t\t\tmargin-left: 10px;\n\t\t}\n\t}\n}\n</style>\n"]}]}
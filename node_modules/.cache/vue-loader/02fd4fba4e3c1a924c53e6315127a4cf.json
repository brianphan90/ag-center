{"remainingRequest":"/Users/brianphan/jets/kf-grower-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brianphan/jets/kf-grower-portal/src/components/charts/BarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brianphan/jets/kf-grower-portal/src/components/charts/BarChart.vue","mtime":1617815454742},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBmb3JtYXROdW1iZXIgZnJvbSAnQC9saWIvdXRpbHMvZm9ybWF0TnVtYmVyJzsKaW1wb3J0IHsgZm9ybWF0IH0gZnJvbSAnZGF0ZS1mbnMnOwppbXBvcnQgY29sb3JzIGZyb20gJ0AvYXNzZXRzL2pzL2NvbG9ycyc7CmltcG9ydCBCYXNlQ2hhcnQgZnJvbSAnLi9CYXNlQ2hhcnQnOwoKZXhwb3J0IGRlZmF1bHQgewoJbmFtZSA6ICdiYXItY2hhcnQnLAoKCWV4dGVuZHMgOiBCYXNlQ2hhcnQsCgoJcHJvcHMgOiB7CgkJY2hhcnQgOiB7CgkJCXR5cGUgOiBPYmplY3QsCgkJfSwKCX0sCgoJZGF0YSA6ICgpID0+ICggewoJCS8vIG5vdGhpbmcKCX0gKSwKCgljb21wdXRlZCA6IHsKCQludW1PZkJhcnMoKSB7CgkJCXJldHVybiBPYmplY3Qua2V5cyggdGhpcy5jaGFydC5kYXRhICkubGVuZ3RoOwoJCX0sCgkJbWF4QmFyV2lkdGgoKSB7CgkJCWNvbnN0IHsgYXcsIG51bU9mQmFycyB9ID0gdGhpczsKCQkJcmV0dXJuIGF3IC8gbnVtT2ZCYXJzOwoJCX0sCgkJYmFyV2lkdGgoKSB7CgkJCWNvbnN0IHsgbWF4QmFyV2lkdGggfSA9IHRoaXM7CgkJCXJldHVybiBNYXRoLm1pbiggbWF4QmFyV2lkdGgsIDI1ICk7CgkJfSwKCQliYXJQYWRkaW5nKCkgewoJCQljb25zdCB7IGJhcldpZHRoLCBudW1PZkJhcnMsIGF3IH0gPSB0aGlzOwoJCQlyZXR1cm4gKCBhdyAtICggYmFyV2lkdGggKiBudW1PZkJhcnMgKSApIC8gbnVtT2ZCYXJzOwoJCX0sCgkJcmFuZ2UoKSB7CgoJCQljb25zdCB2YWx1ZXMgPSB0aGlzLmNoYXJ0LmRhdGEubWFwKCBpdGVtID0+IGl0ZW0udmFsdWUgKTsKCQkJY29uc3QgZGF0YVJhbmdlID0gdGhpcy5nZXREYXRhUmFuZ2UoIHZhbHVlcywgZmFsc2UgKTsKCQkJcmV0dXJuIHsKCQkJCW1pbiA6IGRhdGFSYW5nZS5zdGFydCwKCQkJCW1heCA6IGRhdGFSYW5nZS5lbmQKCQkJfTsKCgoJCX0KCX0sCgoJbW91bnRlZCgpIHsKCQl0aGlzLmluaXQoIHRoaXMuJHJlZnMuc3ZnICk7Cgl9LAoKCW1ldGhvZHMgOiB7CgoJCWRyYXcoKSB7CgoJCQkvLyBnZXQgZGF0YSByYW5nZQoJCQljb25zdCB5VmFsdWVzID0gdGhpcy5jaGFydC5kYXRhLm1hcCggZGF0dW0gPT4gZGF0dW0udmFsdWUgKTsKCQkJY29uc3QgcmFuZ2UgICA9IHRoaXMuZ2V0RGF0YVJhbmdlKCB5VmFsdWVzICk7CgoJCQkvLyBkcmF3IHktYXhpcyBsYWJlbHMKCQkJdGhpcy5kcmF3QXhpc0luZGljYXRvcnMoIHsKCQkJCWF4aXMgICAgICAgICAgIDogJ3ktcmlnaHQnLAoJCQkJdHJhbnNmb3JtTGFiZWwgOiB0ZXh0ID0+IGZvcm1hdE51bWJlciggdGV4dCApLAoJCQkJbGluZXMgICAgICAgICAgOiB7CgkJCQkJbnVtYmVyT2ZJbmRpY2F0b3JzICAgICAgICAgOiA1LAoJCQkJCXNwYWNlQmV0d2VlbkxhYmVsc0FuZExpbmVzIDogMTAsCgkJCQl9LAoJCQkJY29sb3IgOiBjb2xvcnMuY29sb3JQcmltYXJ5LAoJCQkJcmFuZ2UsCgkJCX0gKTsKCgkJCS8vIGRyYXcgeC1heGlzIGxhYmVscwoJCQljb25zdCB4QXhpc0RhdGEgPSB0aGlzLmRyYXdBeGlzSW5kaWNhdG9ycyggewoJCQkJYXhpcyAgICAgICAgICAgICAgICAgICAgICAgOiAneC1ib3R0b20nLAoJCQkJdmFsdWVzICAgICAgICAgICAgICAgICAgICAgOiB0aGlzLmNoYXJ0LmRhdGEsCgkJCQlzcGFjZUJldHdlZW5MYWJlbHNBbmRDaGFydCA6IDEwLAoJCQkJbGFiZWxTdHlsZSAgICAgICAgICAgICAgICAgOiBbCgkJCQkJWydmb250LXNpemUnLCAnMTRweCddLAoJCQkJCVsnZm9udC13ZWlnaHQnLCAnNzAwJ10sCgkJCQkJWydmb250LWZhbWlseScsICciTWFuamFyaSIsIHNhbnMtc2VyaWYnXSwKCQkJCV0sCgkJCX0gKTsKCQkJY29uc29sZS5sb2coIHhBeGlzRGF0YSApOwoJCQljb25zb2xlLmxvZyggeEF4aXNEYXRhLmZvckVhY2goIHggPT4gY29uc29sZS5sb2coIHgueCgpICkgKSApOwoJCQljb25zdCBiYXJHcm91cHMgPSB0aGlzLmNyZWF0ZUJhckdyb3VwKCB0aGlzLmNoYXJ0LmRhdGEgKTsKCQkJdGhpcy5kcmF3QmFycyggYmFyR3JvdXBzICk7CgkJfSwKCgkJY3JlYXRlQmFyR3JvdXAoIGJhckRhdGEgKSB7CgkJCXJldHVybiB0aGlzLmNhbnZhcy5zZWxlY3RBbGwoIGBiYXJzLSR7dGhpcy5pZH1gICkKCQkJCS5kYXRhKCBiYXJEYXRhICkKCQkJCS5lbnRlcigpCgkJCQkuYXBwZW5kKCAnZycgKTsKCQl9LAoJCWRyYXdCYXJzKCBiYXJHcm91cHMgKSB7CgkJCWJhckdyb3VwcwoJCQkJLmFwcGVuZCggJ3JlY3QnICkKCQkJCS5hdHRyKCAneCcsICggZCwgaSApID0+IHRoaXMuZ2V0WCggaSApICkKCQkJCS5hdHRyKCAneScsIGQgPT4gdGhpcy5nZXRZKCB0aGlzLmdldEhlaWdodCggZC52YWx1ZSApICkgKQoJCQkJLmF0dHIoICdmaWxsJywgZCA9PiBkLmJhckNvbG9yICkKCQkJCS5hdHRyKCAnaGVpZ2h0JywgZCA9PiB0aGlzLmdldEhlaWdodCggZC52YWx1ZSApICkKCQkJCS5hdHRyKCAnd2lkdGgnLCBkID0+IHRoaXMuYmFyV2lkdGggKTsKCQkJcmV0dXJuIGJhckdyb3VwczsKCQl9LAoKCQlnZXRZKCBoZWlnaHQgKSB7CgkJCWNvbnN0IHsgYWgsIHQgfSA9IHRoaXM7CgkJCXJldHVybiBhaCArIHQgLSBoZWlnaHQ7CgkJfSwKCQlnZXRYKCBpICkgewoJCQljb25zdCB7IGF3LCBsLCBiYXJXaWR0aCB9ID0gdGhpczsKCQkJY29uc3QgcmV0ID0gKCBsICsgKCAoIGF3IC8gKCB0aGlzLmNoYXJ0LmRhdGEubGVuZ3RoICsgMSApICkgKiAoIGkgKyAxICkgKSApIC0gYmFyV2lkdGggLyAyOwoJCQljb25zb2xlLmxvZyggcmV0ICk7CgkJCXJldHVybiByZXQ7CgkJfSwKCQlnZXRUZXh0WCggaSApIHsKCQkJY29uc3QgewoJCQkJbCwKCQkJCWJhcldpZHRoLAoJCQkJYmFyU3BhY2luZwoJCQl9ID0gdGhpczsKCQkJcmV0dXJuICggbCArICggYmFyV2lkdGggKiBpICkgKyAoIGJhclNwYWNpbmcgKiBpICkgKyAoIGJhcldpZHRoIC8gMiApICkgKyAoIGJhclNwYWNpbmcgLyAyICk7CgkJfSwKCQlnZXRIZWlnaHQoIHZhbHVlICkgewoJCQljb25zdCB7IG1heCB9ID0gdGhpcy5yYW5nZTsKCQkJcmV0dXJuICggdmFsdWUgLyBtYXggKSAqIHRoaXMuYWg7CgkJfQoJfQoKCn07Cg=="},{"version":3,"sources":["BarChart.vue"],"names":[],"mappings":";;;;;;;;;;;;AAYA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA","file":"BarChart.vue","sourceRoot":"src/components/charts","sourcesContent":["<template lang='pug'>\n.bar-chart(:id='id')\n\tsvg(ref='svg')\n\t\tdefs\n\t\t\tlinearGradient(:id='`gradient-${id}`' :x1=\"l\" :y1=\"t\" :x2=\"l + aw\" :y2=\"t\" gradientUnits=\"userSpaceOnUse\")\n\t\t\t\tstop(stop-color=\"#EED667\" stop-opacity=\"0\")\n\t\t\t\tstop(offset=\"0.128101\" stop-color=\"#EED667\" stop-opacity=\"0.19\")\n\t\t\t\tstop(offset=\"0.8698\" stop-color=\"#EED667\" stop-opacity=\"0.19\")\n\t\t\t\tstop(offset=\"1\" stop-color=\"#EED667\" stop-opacity=\"0\")\n</template>\n\n<script>\nimport formatNumber from '@/lib/utils/formatNumber';\nimport { format } from 'date-fns';\nimport colors from '@/assets/js/colors';\nimport BaseChart from './BaseChart';\n\nexport default {\n\tname : 'bar-chart',\n\n\textends : BaseChart,\n\n\tprops : {\n\t\tchart : {\n\t\t\ttype : Object,\n\t\t},\n\t},\n\n\tdata : () => ( {\n\t\t// nothing\n\t} ),\n\n\tcomputed : {\n\t\tnumOfBars() {\n\t\t\treturn Object.keys( this.chart.data ).length;\n\t\t},\n\t\tmaxBarWidth() {\n\t\t\tconst { aw, numOfBars } = this;\n\t\t\treturn aw / numOfBars;\n\t\t},\n\t\tbarWidth() {\n\t\t\tconst { maxBarWidth } = this;\n\t\t\treturn Math.min( maxBarWidth, 25 );\n\t\t},\n\t\tbarPadding() {\n\t\t\tconst { barWidth, numOfBars, aw } = this;\n\t\t\treturn ( aw - ( barWidth * numOfBars ) ) / numOfBars;\n\t\t},\n\t\trange() {\n\n\t\t\tconst values = this.chart.data.map( item => item.value );\n\t\t\tconst dataRange = this.getDataRange( values, false );\n\t\t\treturn {\n\t\t\t\tmin : dataRange.start,\n\t\t\t\tmax : dataRange.end\n\t\t\t};\n\n\n\t\t}\n\t},\n\n\tmounted() {\n\t\tthis.init( this.$refs.svg );\n\t},\n\n\tmethods : {\n\n\t\tdraw() {\n\n\t\t\t// get data range\n\t\t\tconst yValues = this.chart.data.map( datum => datum.value );\n\t\t\tconst range   = this.getDataRange( yValues );\n\n\t\t\t// draw y-axis labels\n\t\t\tthis.drawAxisIndicators( {\n\t\t\t\taxis           : 'y-right',\n\t\t\t\ttransformLabel : text => formatNumber( text ),\n\t\t\t\tlines          : {\n\t\t\t\t\tnumberOfIndicators         : 5,\n\t\t\t\t\tspaceBetweenLabelsAndLines : 10,\n\t\t\t\t},\n\t\t\t\tcolor : colors.colorPrimary,\n\t\t\t\trange,\n\t\t\t} );\n\n\t\t\t// draw x-axis labels\n\t\t\tconst xAxisData = this.drawAxisIndicators( {\n\t\t\t\taxis                       : 'x-bottom',\n\t\t\t\tvalues                     : this.chart.data,\n\t\t\t\tspaceBetweenLabelsAndChart : 10,\n\t\t\t\tlabelStyle                 : [\n\t\t\t\t\t['font-size', '14px'],\n\t\t\t\t\t['font-weight', '700'],\n\t\t\t\t\t['font-family', '\"Manjari\", sans-serif'],\n\t\t\t\t],\n\t\t\t} );\n\t\t\tconsole.log( xAxisData );\n\t\t\tconsole.log( xAxisData.forEach( x => console.log( x.x() ) ) );\n\t\t\tconst barGroups = this.createBarGroup( this.chart.data );\n\t\t\tthis.drawBars( barGroups );\n\t\t},\n\n\t\tcreateBarGroup( barData ) {\n\t\t\treturn this.canvas.selectAll( `bars-${this.id}` )\n\t\t\t\t.data( barData )\n\t\t\t\t.enter()\n\t\t\t\t.append( 'g' );\n\t\t},\n\t\tdrawBars( barGroups ) {\n\t\t\tbarGroups\n\t\t\t\t.append( 'rect' )\n\t\t\t\t.attr( 'x', ( d, i ) => this.getX( i ) )\n\t\t\t\t.attr( 'y', d => this.getY( this.getHeight( d.value ) ) )\n\t\t\t\t.attr( 'fill', d => d.barColor )\n\t\t\t\t.attr( 'height', d => this.getHeight( d.value ) )\n\t\t\t\t.attr( 'width', d => this.barWidth );\n\t\t\treturn barGroups;\n\t\t},\n\n\t\tgetY( height ) {\n\t\t\tconst { ah, t } = this;\n\t\t\treturn ah + t - height;\n\t\t},\n\t\tgetX( i ) {\n\t\t\tconst { aw, l, barWidth } = this;\n\t\t\tconst ret = ( l + ( ( aw / ( this.chart.data.length + 1 ) ) * ( i + 1 ) ) ) - barWidth / 2;\n\t\t\tconsole.log( ret );\n\t\t\treturn ret;\n\t\t},\n\t\tgetTextX( i ) {\n\t\t\tconst {\n\t\t\t\tl,\n\t\t\t\tbarWidth,\n\t\t\t\tbarSpacing\n\t\t\t} = this;\n\t\t\treturn ( l + ( barWidth * i ) + ( barSpacing * i ) + ( barWidth / 2 ) ) + ( barSpacing / 2 );\n\t\t},\n\t\tgetHeight( value ) {\n\t\t\tconst { max } = this.range;\n\t\t\treturn ( value / max ) * this.ah;\n\t\t}\n\t}\n\n\n};\n</script>\n\n<style lang='scss'>\n.bar-chart {\n\tdisplay: flex;\n\talign-items: stretch;\n\twidth: 100%;\n\n\taside {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: space-between;\n\t\tflex: 1 1 0;\n\n\t\tlegend {\n\t\t\ttext-align: left;\n\n\t\t\th1,\n\t\t\th2 {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\ttext-align: left;\n\t\t\t}\n\n\t\t\th1 {\n\t\t\t\tfont-weight: 700;\n\t\t\t\tcolor: $color-accent;\n\t\t\t}\n\n\t\t\th2 {\n\t\t\t\tfont-family: \"Manjari\", sans-serif;\n\t\t\t\tfont-size: 18px;\n\t\t\t\tfont-weight: 400;\n\t\t\t}\n\t\t}\n\n\t\tfooter p {\n\t\t\tfont-family: 'Manjari', sans-serif;\n\t\t\ttext-align: left;\n\t\t\tfont-size: 12px;\n\n\t\t\tspan {\n\t\t\t\tdisplay: inline-block;\n\t\t\t}\n\t\t}\n\t}\n\n\tsvg {\n\t\tflex: 2 2 0;\n\t}\n}\n</style>\n"]}]}
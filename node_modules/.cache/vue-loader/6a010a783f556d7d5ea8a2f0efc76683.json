{"remainingRequest":"/Users/brianphan/jets/kf-grower-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brianphan/jets/kf-grower-portal/src/components/charts/PayableBarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brianphan/jets/kf-grower-portal/src/components/charts/PayableBarChart.vue","mtime":1617307012616},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PayableBarChart.vue"],"names":[],"mappings":";;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA","file":"PayableBarChart.vue","sourceRoot":"src/components/charts","sourcesContent":["<template lang='pug'>\n.chart\n\tsvg(ref='svg')\n</template>\n\n<script>\n/* eslint-disable*/\nimport formatNumber from '@/lib/utils/formatNumber';\nimport colors from '@/assets/js/colors';\nimport * as d3 from 'd3';\nimport BaseChart from './BaseChart';\nimport ChartLegend from '../ChartLegend';\n\nexport default {\n\tname    : 'payable-bar-chart',\n\textends : BaseChart,\n\tprops   : {\n\t\toptions : {\n\t\t\ttype    : Object,\n\t\t\tdefault : () => ( {\n\t\t\t\thasBarLabels : true,\n\t\t\t\tcolor        : 'red'\n\t\t\t} )\n\t\t}\n\t},\n\tdata : () => ( {\n\t\tbarLabelHeight  : 30,\n\t\tbarLabelSpacing : 5,\n\t\tdataLoaded      : false,\n\t\tchart : {\n\t\t\ttype    : Object,\n\n\t\t\tlabel     : 'this shows your payable yield.',\n\t\t\tupdatedAt : new Date(),\n\t\t\tdata      : [],\n\n\t\t},\n\t} ),\n\tcomponents : {\n\t\tChartLegend\n\t},\n\n\tcomputed : {\n\t\tbarWidth() {\n\t\t\tconst { aw } = this;\n\t\t\treturn Math.min( aw / this.chart.data.length, 30 );\n\t\t},\n\t\tbarSpacing() {\n\t\t\tconst { barWidth, data, aw } = this;\n\t\t\t// console.log( barWidth );\n\t\t\treturn ( aw - ( barWidth * this.chart.data.length ) ) / this.chart.data.length;\n\t\t},\n\t\tlabelTextSize() {\n\t\t\treturn this.barWidth * 0.55;\n\t\t}\n\t},\n\n\twatch: {\n\t\t'$store.state.entitySummaryData.PayableYield.chartData' : {\n\t\t\thandler(data) {\n\t\t\t\tif (data) {\n\t\t\t\t\tthis.loadData();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\n\tmounted() {\n\t\tif(!this.dataLoaded) {\n\t\t\tthis.loadData();\n\t\t}\n\t},\n\tmethods : {\n\t\tloadData() {\n\t\t\tthis.dataLoaded=true;\n\t\t\tlet year=[2016, 2017, 2018, 2019, 2020];\n\t\t\tfor(let li in this.$store.state.entitySummaryData.PayableYield.chartData ) {\n\t\t\t\tlet value=0;\n\t\t\t\tif( this.$store.state.entitySummaryData.PayableYield.chartData[li] && \n\t\t\t\t\t'TotalAssessable' in this.$store.state.entitySummaryData.PayableYield.chartData[li] ) {\n\t\t\t\t\tvalue=this.$store.state.entitySummaryData.PayableYield.chartData[li].TotalAssessable;\n\t\t\t\t\tthis.chart.data.push({\n\t\t\t\t\t\tvalue: value,\n\t\t\t\t\t\tlabel:  year[li],\n\t\t\t\t\t\tcolor: this.options.color\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tconsole.log('li not found: '+li);\n\t\t\t\t}\n\t\t\t\t/*\n\t\t\t\t  this.chart.data.push({value:value,label:(2015+li),color:this.options.color})\n\t\t\t\t*/\n\t\t\t\t\n\t\t\t}\n\t\t\tthis.init(this.$refs.svg);\n\t\t\t\t\t\n\t\t},\n\t\tdraw() {\n\t\t\tconsole.log('draw');\n\t\t\tthis.updateDims( {\n\t\t\t\tl : 5,\n\t\t\t\tr : 5,\n\t\t\t\tt : 30\n\t\t\t} );\n\n\t\t\tconst { values } = this.chart.data.map( entry => entry.label );\n\t\t\tconst yValues = this.chart.data.map( entry => entry.value );\n\t\t\t// const sum = Object.keys( values ).reduce( ( total, key ) => total + values[key], 0 );\n\t\t\tconst sum = this.getDataRange( yValues, false ).end;\n\t\t\t// const yValues = this.chart.data[0].map( datum => datum.value );\n\t\t\tconst range   = { start : 0, end : sum };\n\n\t\t\t//*\n\t\t\tif ( this.hasBarLabels ) {\n\t\t\t\tthis.updateDims( {\n\t\t\t\t\tt : this.t + this.barLabelHeight + this.barLabelSpacing\n\t\t\t\t} );\n\t\t\t}\n\t\t\t//*/\n\n\t\t\t// draw y-axis labels\n\t\t\t//*\n\t\t\tconst yAxisData = this.drawAxisIndicators( {\n\t\t\t\taxis           : 'y-right',\n\t\t\t\ttransformLabel : text => formatNumber( text ),\n\t\t\t\tlines          : {\n\t\t\t\t\tnumberOfIndicators         : 6,\n\t\t\t\t\tspaceBetweenLabelsAndLines : 10,\n\t\t\t\t},\n\t\t\t\t//color : this.chart.data.map( entry => entry.color),\n\t\t\t\tcolor : colors.colorPrimary,\n\t\t\t\tdifferentFirstAndLastLabels: false,\n\t\t\t\trange,\n\t\t\t} );\n\t\t\t//*/\n\n\t\t\t// console.log( yAxisData );\n\t\t\t// draw x-axis labels\n\n\t\t\t//*\n\t\t\tconst xAxisData = this.drawAxisIndicators( {\n\t\t\t\taxis                       : 'x-bottom',\n\t\t\t\tvalues                     : this.chart.data,\n\t\t\t\tspaceBetweenLabelsAndChart : 10,\n\t\t\t\tlabelStyle                 : [\n\t\t\t\t\t['font-size', '14px'],\n\t\t\t\t\t['font-weight', '700'],\n\t\t\t\t\t['font-family', '\"Manjari\", sans-serif'],\n\t\t\t\t],\n\t\t\t} );\n\t\t\t//*/\n\n\n\t\t\t// Compute the position and size of the bars\n\t\t\tconst barData   = this.newComputeBarData( );\n\t\t\tconst barGroups = this.newDrawBars( barData );\n\t\t\tthis.drawBarLabels( barGroups );\n\t\t\t// console.log( barGroups );\n\n\t\t},\n\n\n\t\tnewComputeBarData( ) {\n\t\t\tconst values = this.chart.data.map( entry => entry.value );\n\t\t\tconst { end } = this.getDataRange( values, false );\n\t\t\tconst sum = this.chart.data.reduce( ( total, entry ) => total + entry.value, 0 );\n\t\t\treturn this.chart.data.map( ( entry, i ) => {\n\t\t\t\tconst { value } = entry;\n\t\t\t\tconst height = ( value / end ) * this.ah;\n\t\t\t\tconst y = this.t + ( this.ah - height );\n\t\t\t\treturn {\n\t\t\t\t\twidth : this.barWidth,\n\t\t\t\t\tcolor : entry.color,\n\t\t\t\t\tx     : this.getX( i ),\n\t\t\t\t\t// x     : this.l + xDims[i].x,\n\t\t\t\t\tlabel : entry.label,\n\t\t\t\t\tvalue : entry.value,\n\t\t\t\t\ty,\n\t\t\t\t\theight\n\t\t\t\t};\n\t\t\t} );\n\t\t},\n\t\tnewDrawXaxis( barGroups ) {\n\t\t\tconst xAxisLabels = barGroups\n\t\t\t\t.append( 'text' )\n\t\t\t\t.attr( 'class', 'x-axis-labels' )\n\t\t\t\t.attr( 'x', ( d, i ) => this.getTextX( i ) )\n\t\t\t\t.attr( 'y', this.t + this.ah )\n\t\t\t\t.attr( 'text-anchor', 'middle' )\n\t\t\t\t.attr( 'dominant-baseline', 'start' )\n\t\t\t\t.style( 'font-size', '12px' )\n\t\t\t\t.text( d => d.label );\n\t\t\tthis.changeWithMode( {\n\t\t\t\tnodes   : xAxisLabels,\n\t\t\t\toptions : {\n\t\t\t\t\tday : {\n\t\t\t\t\t\tstyle : [\n\t\t\t\t\t\t\t['fill', colors.grey],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tnight : {\n\t\t\t\t\t\tstyle : [\n\t\t\t\t\t\t\t['fill', colors.white],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t} );\n\t\t\tconst barLabelNodes = barGroups.selectAll( '.x-axis-labels' );\n\t\t\tconst barLabelWidths = Array.from( barLabelNodes._groups[0] ).map( a => a.getBBox().height );\n\t\t\tconst biggestBarLabel = Math.max( ...barLabelWidths );\n\t\t\tconst spaceBetweenBarAndXAxis = 2;\n\n\t\t\tthis.updateDims( {\n\t\t\t\tb : biggestBarLabel + spaceBetweenBarAndXAxis\n\t\t\t} );\n\n\t\t\treturn xAxisLabels;\n\t\t},\n\t\tnewDrawBars( barData ) {\n\t\t\tconst barGroups = this.canvas.selectAll( `bars-${this.id}` )\n\t\t\t\t.data( barData )\n\t\t\t\t.enter()\n\t\t\t\t.append( 'g' );\n\n\t\t\tbarGroups\n\t\t\t\t.append( 'rect' )\n\t\t\t\t.attr( 'x', d => d.x )\n\t\t\t\t.attr( 'y', d => d.y )\n\t\t\t\t// .attr( 'fill', d => d.color )\n\t\t\t\t.attr( 'fill', d => d.color )\n\t\t\t\t.attr( 'height', d => d.height )\n\t\t\t\t.attr( 'width', d => d.width )\n\t\t\t\t.attr( 'stroke', d => d.color)\n\t\t\t\t.attr( 'opacity', 0.8 )\n\t\t\t\t.attr( 'stroke-width', d => '2' )\n\t\t\t\t.attr( 'rx', '5')\n\t\t\t\t.attr( 'class', `bar-${this.id} translate-${this.id}` );\n\n\t\t\tconst roundToNearestMultipleOfEight = num => Math.ceil( Math.ceil( num ) / 8 ) * 8;\n\t\t\treturn barGroups;\n\t\t},\n\n\n\t\tdrawBarLabels( barGroups ) {\n\t\t\tconst barLabelGroups = barGroups\n\t\t\t\t.append( 'g' );\n\t\t\tconst textLabels = barLabelGroups.append( 'text' )\n\t\t\t\t.attr( 'x', ( d, i ) => this.getTextX( i ) )\n\t\t\t\t.attr( 'y', ( d ) => {\n\t\t\t\t\tconst height = this.getHeight( d.value );\n\t\t\t\t\tconst y = this.getY( height );\n\t\t\t\t\treturn y - ( ( this.barLabelHeight / 2 ) + this.barLabelSpacing );\n\t\t\t\t} )\n\t\t\t\t.attr( 'class', 'bar-value' )\n\t\t\t\t.attr( 'text-anchor', 'middle' )\n\t\t\t\t.attr( 'dominant-baseline', 'middle' )\n\t\t\t\t.style( 'fill', d => d.color )\n\t\t\t\t.style( 'font-weight', 'bold' )\n\t\t\t\t.style( 'font-family', 'Roboto Slab' )\n\t\t\t\t.style( 'font-size', `${this.labelTextSize}px` )\n\t\t\t\t.text( d => formatNumber(d.value) );\n\t\t\tconst textDims = Array.from(\n\t\t\t\ttextLabels._groups[0]\n\t\t\t).map(\n\t\t\t\ttext => d3.select( text )\n\t\t\t\t\t.node()\n\t\t\t\t\t.getBBox()\n\t\t\t);\n\n\t\t},\n\t\tdrawXAxisIndicators( options ) {\n\t\t\tconst {\n\t\t\t\taxis,\n\t\t\t\tvalues,\n\t\t\t\tspaceBetweenLabelsAndChart,\n\t\t\t\tlabelStyle,\n\t\t\t} = options;\n\n\t\t\tconst getX = ( i ) => {\n\t\t\t\tconst { aw, l } = this;\n\n\t\t\t\treturn l + ( ( aw / ( values.length + 1 ) ) * ( i + 1 ) );\n\t\t\t};\n\n\t\t\tconst xAxisData = values.map( ( datum, i ) => {\n\n\t\t\t\tconst y = () => ( ( axis === 'x-top' ) ? this.t : this.t + this.ah );\n\t\t\t\tconst x = () => getX( i );\n\t\t\t\treturn {\n\t\t\t\t\t...datum,\n\t\t\t\t\tx,\n\t\t\t\t\ty,\n\t\t\t\t\ttextAnchor       : 'middle',\n\t\t\t\t\tdominantBaseline : ( axis === 'x-top' ) ? 'text-before-edge' : 'text-after-edge',\n\t\t\t\t};\n\t\t\t} );\n\n\t\t\tconst xAxisLabels = this.canvas\n\t\t\t\t.selectAll( 'x-axis-labels axis-label' )\n\t\t\t\t.data( xAxisData )\n\t\t\t\t.enter()\n\t\t\t\t.append( 'text' )\n\t\t\t\t.attr( 'text-anchor', d => d.textAnchor )\n\t\t\t\t.attr( 'x', ( d, i ) => this.getTextX( i ) )\n\t\t\t\t.attr( 'y', d => d.y() )\n\t\t\t\t.attr( 'dominant-baseline', d => d.dominantBaseline )\n\t\t\t\t.style( 'fill', colors.colorPrimary )\n\t\t\t\t.text( d => d.label );\n\n\t\t\tif ( labelStyle ) {\n\t\t\t\tthis.applyMethods( xAxisLabels, 'style', labelStyle );\n\t\t\t}\n\n\t\t\tconst xAxisLabelDims    = Array.from( xAxisLabels._groups[0] ).map( a => a.getBBox() );\n\t\t\tconst xAxisLabelHeights = xAxisLabelDims.map( a => a.height );\n\t\t\t// const xAxisLabelWidths  = xAxisLabelDims.map( a => a.width );\n\t\t\tconst biggestXAxisLabel = Math.max( ...xAxisLabelHeights );\n\n\t\t\tconst dims = ( () => {\n\t\t\t\tif ( axis === 'y-top' ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tt : biggestXAxisLabel + spaceBetweenLabelsAndChart,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tb : biggestXAxisLabel + spaceBetweenLabelsAndChart,\n\t\t\t\t};\n\t\t\t} )();\n\n\t\t\tthis.updateDims( dims );\n\t\t\tthis.realignAxisLabels();\n\n\t\t\t// ? center texts as necessary\n\t\t\t// const totalTextSpace = xAxisLabelWidths.reduce( ( sum, w ) => sum + w, 0 );\n\t\t\t// const leftOverSpace  = this.aw - totalTextSpace;\n\t\t\t// const spaceAround    = ( leftOverSpace / ( values.length + 1 ) );\n\n\t\t\treturn xAxisLabelDims;\n\n\t\t},\n\t\tgetX( i ) {\n\t\t\tconst {\n\t\t\t\tl,\n\t\t\t\tbarWidth,\n\t\t\t\tbarSpacing,\n\t\t\t} = this;\n\t\t\tconst x = l + ( barWidth * i ) + ( barSpacing * i ) + ( barSpacing / 2 );\n\t\t\treturn x;\n\t\t},\n\t\tgetY( height ) {\n\t\t\tconst { ah, t } = this;\n\t\t\treturn ah + t - height;\n\t\t},\n\t\tgetTextX( i ) {\n\t\t\tconst {\n\t\t\t\tl,\n\t\t\t\tbarWidth,\n\t\t\t\tbarSpacing\n\t\t\t} = this;\n\t\t\treturn ( l + ( barWidth * i ) + ( barSpacing * i ) + ( barWidth / 2 ) ) + ( barSpacing / 2 );\n\t\t},\n\t\tgetHeight( value ) {\n\t\t\tconst values = this.chart.data.map( entry => entry.value );\n\t\t\tconst { end } = this.getDataRange( values, false );\n\n\t\t\t// + this assumes that the bottom of the range\n\t\t\t// + is always zero\n\t\t\treturn ( value / end ) * this.ah;\n\t\t}\n\n\t}\n};\n</script>\n\n<style lang='scss'>\n\t.chart{\n\t\theight: 50%;\n\t\twidth: 100%;\n\t\tsvg {\n\t\t// flex: 2 2 0\n\t\tposition: relative;\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tborder: 0px;\n\t\t}\n\t}\n\t// .chart{\n\t// \tdisplay: flex;\n\t// \talign-items: stretch;\n\t// \twidth: 100%;\n\t// \theight: 200px;\n\t// \tpadding:0;\n\t// \tsvg {\n\t// \t// flex: 2 2 0\n\t// \tposition: relative;\n\t// \theight: 100%;\n\t// \twidth: 100%;\n\t// \tborder: 0px;;\n\t// \t}\n\t// }\n\n</style>\n"]}]}
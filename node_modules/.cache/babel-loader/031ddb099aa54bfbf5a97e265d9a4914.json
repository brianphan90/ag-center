{"remainingRequest":"/Users/brianphan/jets/kf-grower-portal/node_modules/babel-loader/lib/index.js!/Users/brianphan/jets/kf-grower-portal/node_modules/eslint-loader/index.js??ref--13-0!/Users/brianphan/jets/kf-grower-portal/src/lib/API.js","dependencies":[{"path":"/Users/brianphan/jets/kf-grower-portal/src/lib/API.js","mtime":1620009908041},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/brianphan/jets/kf-grower-portal/src/lib/API.js"],"names":["env","store","path","a","queryOptions","query","queryKeys","Object","keys","queryString","map","key","value","encodeURIComponent","encodeArray","filter","q","length","join","API_PROTOCOL","API_URL","arr","reduce","item","i","Array","isArray","push","forEach","x","j","objKeys","objKey","fetchPromise","route","options","Promise","resolve","reject","fetch","then","res","status","parseInt","Math","floor","json","err","_body","body","text","firstChar","charAt","isJson","JSON","parse","authenticate","method","Headers","state","accessToken","authObject","defaultHeaders","args","allArgs","concat","RefreshToken","credentials","headers","SetLogout","Login","stringify","GetManifests","_auth","contractNum","GetSummaryTable","rttNums","GetContractList","GetTotalPoundsProducedAllYears","ContractNum","InsectSproc","CropYear","InsectSprocAllYears","QualitySproc","QualitySprocAllYears","YieldByVarietySproc","YieldByVarietySprocAllYears","QualityByFieldSprocAllYears","InsectByFieldSprocAllYears","QualityByVarietySprocAllYears","InsectByVarietySprocAllYears"],"mappings":"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","sourcesContent":["import env from '@/assets/env';\n// eslint-disable-next-line import/no-cycle\nimport store from '../store';\n\nconst path = ( a, queryOptions = null ) => {\n\tconst query = ( () => {\n\t\tif ( !queryOptions ) {\n\t\t\treturn '';\n\t\t}\n\n\t\tconst queryKeys   = Object.keys( queryOptions );\n\t\tconst queryString = queryKeys\n\t\t\t.map( ( key ) => {\n\n\t\t\t\tconst value = queryOptions[key];\n\t\t\t\tif ( typeof value !== 'object' ) {\n\t\t\t\t\treturn `${key}=${encodeURIComponent( queryOptions[key] )}`;\n\t\t\t\t}\n\n\t\t\t\treturn encodeArray( key, value );\n\t\t\t} )\n\t\t\t.filter( q => q.length )\n\t\t\t.join( '&' );\n\n\t\treturn `?${queryString}`;\n\t} )();\n\n\treturn `${env.API_PROTOCOL}://${env.API_URL}/${a}${query}`;\n};\n\nconst encodeArray = ( key, arr ) => { // eslint-disable-line\n\n\treturn arr.reduce( ( a, item, i ) => {\n\n\t\t// For 1 dimensional arrays\n\t\tif ( !Array.isArray( item ) ) {\n\t\t\ta.push( `${key}[${i}]=${encodeURIComponent( item )}` );\n\t\t\treturn a;\n\t\t}\n\n\t\t// For 2 dimensional arrays\n\t\titem.forEach( ( x, j ) => {\n\t\t\tif ( typeof x === 'object' ) {\n\t\t\t\tconst objKeys = Object.keys( x );\n\t\t\t\tobjKeys.forEach( ( objKey ) => {\n\t\t\t\t\ta.push( `${key}[${i}][${j}][${objKey}]=${encodeURIComponent( x[objKey] )}` );\n\t\t\t\t} );\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ta.push( `${key}[${i}][${j}]=${encodeURIComponent( x )}` );\n\t\t} );\n\n\t\treturn a;\n\n\t}, [] )\n\t\t.join( '&' );\n};\n\n\nconst fetchPromise = ( route, options ) => new Promise( async ( resolve, reject ) => {\n\ttry {\n\t\tawait fetch( route, options )\n\t\t\t.then( async ( res ) => {\n\t\t\t\tconst status = parseInt( res.status, 10 );\n\n\t\t\t\tif ( ( Math.floor( status / 100 ) * 100 ) !== 200 ) {\n\n\t\t\t\t\tres.json()\n\t\t\t\t\t\t.then( err => reject( err ) );\n\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst body = await _body( res );\n\t\t\t\tresolve( body, res );\n\t\t\t} );\n\t}\n\tcatch ( e ) {\n\t\treject( e );\n\t}\n} );\n\nconst _body = async ( res ) => {\n\tconst text = await res.text();\n\n\tconst firstChar = text.charAt( 0 );\n\tconst isJson    = ( firstChar === '{' || firstChar === '[' );\n\n\tif ( isJson ) {\n\t\treturn JSON.parse( text );\n\t}\n\n\treturn text;\n};\n\nconst authenticate = method => async ( ...args ) => { // eslint-disable-line\n\tconst authObject = {\n\t\tdefaultHeaders : await new Headers( {\n\t\t\t'Content-Type' : 'application/json',\n\t\t\t'Auth-Token'   : store.state.accessToken\n\t\t} ),\n\t};\n\tconst allArgs = [authObject].concat( args );\n\n\treturn method( ...allArgs );\n};\n\nexport const RefreshToken =  () => fetchPromise( path( 'auth/refresh-token' ), {\n\tmethod      : 'GET',\n\tcredentials : 'include',\n\theaders     : new Headers( {\n\t\t'Content-Type' : 'application/json',\n\t} ),\n} );\n\nexport const SetLogout = () => fetchPromise( path( 'auth/logout' ), {\n\tmethod      : 'GET',\n\tcredentials : 'include',\n\theaders     : new Headers( {\n\t\t'Content-Type' : 'applicaiton/json',\n\t} ),\n} );\n\nexport const Login = credentials => fetchPromise( path( 'auth/login' ), {\n\tmethod      : 'POST',\n\tcredentials : 'include',\n\theaders     : new Headers( {\n\t\t'Content-Type' : 'application/json',\n\t} ),\n\tbody : JSON.stringify( { credentials } )\n} );\n\n\nexport const GetManifests = authenticate( async ( _auth, contractNum ) => fetchPromise( path( `contract/manifests/${contractNum}` ), {\n\tmethod  : 'GET',\n\theaders : _auth.defaultHeaders\n} ) );\n\nexport const GetSummaryTable = authenticate( ( _auth, rttNums ) => fetchPromise( path( 'contract/summary-tables', {\n\trttNums\n} ), {\n\tmethod      : 'GET',\n\tcredentials : 'include',\n\theaders     : _auth.defaultHeaders\n} ) );\n\nexport const GetContractList = authenticate( _auth => fetchPromise( path( 'contract/list' ), {\n\tmethod      : 'GET',\n\tcredentials : 'include',\n\theaders     : _auth.defaultHeaders\n} ) );\n\n// here are the sprocs being used for Entity Summary\n\n\n// export const GetTotalPoundsProducedAllYears = args => authenticate( _auth => fetchPromise( path( 'GDD/getTotalPoundsProducedAllYears' ), {\n// \tmethod  : 'GET',\n// \targs    : 'include',\n// \theaders : _auth.defaultHeaders,\n// \tbody    : JSON.stringify( { args } )\n// } ) );\n\n\nexport const GetTotalPoundsProducedAllYears = args => fetchPromise( path( 'GDD/getTotalPoundsProducedAllYears', { ContractNum : args } ), {\n\tmethod      : 'GET',\n\tcredentials : 'include',\n\theaders     : new Headers( {\n\t\t'Content-Type' : 'application/json',\n\t} ),\n} );\n\nexport const InsectSproc = args => fetchPromise( path( 'GDD/insectSproc', { ContractNum : args.ContractNum, CropYear : args.CropYear } ), {\n\tmethod  : 'GET',\n\targs    : 'include',\n\theaders : new Headers( {\n\t\t'Content-Type' : 'application/json',\n\t} ),\n} );\n\nexport const InsectSprocAllYears = args => fetchPromise( path( 'GDD/getInsectSprocAllYears', { ContractNum : args } ), {\n\tmethod  : 'GET',\n\targs    : 'include',\n\theaders : new Headers( {\n\t\t'Content-Type' : 'application/json',\n\t} ),\n} );\n\n\nexport const QualitySproc = args => fetchPromise( path( 'GDD/qualitySproc', { ContractNum : args.ContractNum, CropYear : args.CropYear } ), {\n\tmethod  : 'GET',\n\targs    : 'include',\n\theaders : new Headers( {\n\t\t'Content-Type' : 'application/json',\n\t} ),\n} );\n\nexport const QualitySprocAllYears = args => fetchPromise( path( 'GDD/getQualitySprocAllYears', { ContractNum : args } ), {\n\tmethod  : 'GET',\n\targs    : 'include',\n\theaders : new Headers( {\n\t\t'Content-Type' : 'application/json',\n\t} ),\n} );\n\nexport const YieldByVarietySproc = args => fetchPromise( path( 'GDD/yieldByVarietySproc', { ContractNum : args.ContractNum, CropYear : args.CropYear } ), {\n\tmethod  : 'GET',\n\targs    : 'include',\n\theaders : new Headers( {\n\t\t'Content-Type' : 'application/json',\n\t} ),\n} );\n\nexport const YieldByVarietySprocAllYears = args => fetchPromise( path( 'GDD/yieldByVarietySprocAllYears', { ContractNum : args } ), {\n\tmethod  : 'GET',\n\targs    : 'include',\n\theaders : new Headers( {\n\t\t'Content-Type' : 'application/json',\n\t} ),\n\n\n} );\n\nexport const QualityByFieldSprocAllYears = args => fetchPromise( path( 'GDD/qualityByFieldSprocAllYears', { ContractNum : args } ), {\n\tmethod  : 'GET',\n\targs    : 'include',\n\theaders : new Headers( {\n\t\t'Content-Type' : 'application/json',\n\t} ),\n} );\n\nexport const InsectByFieldSprocAllYears = args => fetchPromise( path( 'GDD/insectByFieldSprocAllYears', { ContractNum : args } ), {\n\tmethod  : 'GET',\n\targs    : 'include',\n\theaders : new Headers( {\n\t\t'Content-Type' : 'application/json',\n\t} ),\n} );\n\nexport const QualityByVarietySprocAllYears = args => fetchPromise( path( 'GDD/qualityByVarietyAllYears', { ContractNum : args } ), {\n\tmethod  : 'GET',\n\targs    : 'include',\n\theaders : new Headers( {\n\t\t'Content-Type' : 'application/json',\n\t} ),\n} );\nexport const InsectByVarietySprocAllYears = args => fetchPromise( path( 'GDD/insectByVarietySprocAllYears', { ContractNum : args } ), {\n\tmethod  : 'GET',\n\targs    : 'include',\n\theaders : new Headers( {\n\t\t'Content-Type' : 'application/json',\n\t} ),\n} );\n"]}]}
{"remainingRequest":"/Users/brianphan/jets/kf-grower-portal/node_modules/babel-loader/lib/index.js!/Users/brianphan/jets/kf-grower-portal/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/brianphan/jets/kf-grower-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brianphan/jets/kf-grower-portal/src/components/charts/PayableYieldByVariety.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brianphan/jets/kf-grower-portal/src/components/charts/PayableYieldByVariety.vue","mtime":1617307018583},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["PayableYieldByVariety.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang='pug'>\n.chart\n\tsvg(ref='svg')\n</template>\n\n<script>\n/* eslint-disable*/\nimport formatNumber from '@/lib/utils/formatNumber';\nimport colors from '@/assets/js/colors';\nimport * as d3 from 'd3';\nimport BaseChart from './BaseChart';\nimport ChartLegend from '../ChartLegend';\n\nexport default {\n\tname    : 'payable-yield-by-variety',\n\textends : BaseChart,\n\tprops   : {\n\t\tchart : {\n\t\t\ttype    : Object,\n\t\t\tdefault : () => ( {\n\t\t\t\tlabel     : 'Pounds Produced in Fake Data',\n\t\t\t\tupdatedAt : new Date(),\n\t\t\t\tdata      : [{\n\t\t\t\t\tvalue : 790,\n\t\t\t\t\tlabel : 'Variety A',\n\t\t\t\t\tcolor : '#80AB2C',\n\t\t\t\t}, {\n\t\t\t\t\tvalue : 730,\n\t\t\t\t\tlabel : 'Variety B',\n\t\t\t\t\tcolor : '#80AB2C',\n\t\t\t\t}, {\n\t\t\t\t\tvalue : 1010,\n\t\t\t\t\tlabel : 'Variety C',\n\t\t\t\t\tcolor : '#80AB2C',\n\t\t\t\t}\n\t\t\t\t],\n\t\t\t} ),\n\t\t},\n\t\toptions : {\n\t\t\ttype    : Object,\n\t\t\tdefault : () => ( {\n\t\t\t\thasBarLabels : true\n\t\t\t} )\n\t\t}\n\t},\n\tdata : () => ( {\n\t\tbarLabelHeight  : 30,\n\t\tbarLabelSpacing : 5\n\t} ),\n\tcomponents : {\n\t\tChartLegend\n\t},\n\n\tcomputed : {\n\t\tbarWidth() {\n\t\t\tconst { aw } = this;\n\t\t\treturn Math.min( aw / this.chart.data.length, 30 );\n\t\t},\n\t\tbarSpacing() {\n\t\t\tconst { barWidth, data, aw } = this;\n\t\t\t// console.log( barWidth );\n\t\t\treturn ( aw - ( barWidth * this.chart.data.length ) ) / this.chart.data.length;\n\t\t},\n\t\tlabelTextSize() {\n\t\t\treturn this.barWidth * 0.55;\n\t\t}\n\t},\n\tmounted() {\n\t\tthis.init( this.$refs.svg );\n\t},\n\tmethods : {\n\t\tdraw() {\n\t\t\tthis.updateDims( {\n\t\t\t\tl : 5,\n\t\t\t\tr : 5,\n\t\t\t\tt : 30\n\t\t\t} );\n\t\t\tconst { values } = this.chart.data.map( entry => entry.label );\n\t\t\tconst yValues = this.chart.data.map( entry => entry.value );\n\t\t\t// const sum = Object.keys( values ).reduce( ( total, key ) => total + values[key], 0 );\n\t\t\tconst sum = this.getDataRange( yValues, false ).end;\n\t\t\t// const yValues = this.chart.data[0].map( datum => datum.value );\n\t\t\tconst range   = { start : 0, end : sum };\n\n\t\t\tif ( this.hasBarLabels ) {\n\t\t\t\tthis.updateDims( {\n\t\t\t\t\tt : this.t + this.barLabelHeight + this.barLabelSpacing\n\t\t\t\t} );\n\t\t\t}\n\t\t\t// draw y-axis labels\n\t\t\tconst yAxisData = this.drawAxisIndicators( {\n\t\t\t\taxis           : 'y-right',\n\t\t\t\ttransformLabel : text => formatNumber( text ),\n\t\t\t\tlines          : {\n\t\t\t\t\tnumberOfIndicators         : 6,\n\t\t\t\t\tspaceBetweenLabelsAndLines : 10,\n\t\t\t\t},\n\t\t\t\tcolor : colors.colorPrimary,\n\t\t\t\tdifferentFirstAndLastLabels: false,\n\t\t\t\trange,\n\t\t\t} );\n\t\t\t// console.log( yAxisData );\n\t\t\t// draw x-axis labels\n\t\t\tconst xAxisData = this.drawAxisIndicators( {\n\t\t\t\taxis                       : 'x-bottom',\n\t\t\t\tvalues                     : this.chart.data,\n\t\t\t\tspaceBetweenLabelsAndChart : 10,\n\t\t\t\tlabelStyle                 : [\n\t\t\t\t\t['font-size', '14px'],\n\t\t\t\t\t['font-weight', '700'],\n\t\t\t\t\t['font-family', '\"Manjari\", sans-serif'],\n\t\t\t\t],\n\t\t\t} );\n\t\t\t// Compute the position and size of the bars\n\t\t\tconst barData   = this.newComputeBarData( );\n\t\t\tconst barGroups = this.newDrawBars( barData );\n\n\t\t\tthis.drawBarLabels( barGroups );\n\t\t},\n\n\t\tnewComputeBarData( ) {\n\t\t\tconst values = this.chart.data.map( entry => entry.value );\n\t\t\tconst { end } = this.getDataRange( values, false );\n\t\t\tconst sum = this.chart.data.reduce( ( total, entry ) => total + entry.value, 0 );\n\t\t\treturn this.chart.data.map( ( entry, i ) => {\n\t\t\t\tconst { value } = entry;\n\t\t\t\tconst height = ( value / end ) * this.ah;\n\t\t\t\tconst y = this.t + ( this.ah - height );\n\t\t\t\treturn {\n\t\t\t\t\twidth : this.barWidth,\n\t\t\t\t\tcolor : entry.color,\n\t\t\t\t\tx     : this.getX( i ),\n\t\t\t\t\t// x     : this.l + xDims[i].x,\n\t\t\t\t\tlabel : entry.label,\n\t\t\t\t\tvalue : entry.value,\n\t\t\t\t\ty,\n\t\t\t\t\theight\n\t\t\t\t};\n\t\t\t} );\n\t\t},\n\t\tnewDrawXaxis( barGroups ) {\n\t\t\tconst xAxisLabels = barGroups\n\t\t\t\t.append( 'text' )\n\t\t\t\t.attr( 'class', 'x-axis-labels' )\n\t\t\t\t.attr( 'x', ( d, i ) => this.getTextX( i ) )\n\t\t\t\t.attr( 'y', this.t + this.ah )\n\t\t\t\t.attr( 'text-anchor', 'middle' )\n\t\t\t\t.attr( 'dominant-baseline', 'start' )\n\t\t\t\t.style( 'font-size', '12px' )\n\t\t\t\t.text( d => d.label );\n\t\t\tthis.changeWithMode( {\n\t\t\t\tnodes   : xAxisLabels,\n\t\t\t\toptions : {\n\t\t\t\t\tday : {\n\t\t\t\t\t\tstyle : [\n\t\t\t\t\t\t\t['fill', colors.grey],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tnight : {\n\t\t\t\t\t\tstyle : [\n\t\t\t\t\t\t\t['fill', colors.white],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t} );\n\t\t\tconst barLabelNodes = barGroups.selectAll( '.x-axis-labels' );\n\t\t\tconst barLabelWidths = Array.from( barLabelNodes._groups[0] ).map( a => a.getBBox().height );\n\t\t\tconst biggestBarLabel = Math.max( ...barLabelWidths );\n\t\t\tconst spaceBetweenBarAndXAxis = 2;\n\t\t\tthis.updateDims( {\n\t\t\t\tb : biggestBarLabel + spaceBetweenBarAndXAxis\n\t\t\t} );\n\t\t\treturn xAxisLabels;\n\t\t},\n\t\tnewDrawBars( barData ) {\n\t\t\tconst barGroups = this.canvas.selectAll( `bars-${this.id}` )\n\t\t\t\t.data( barData )\n\t\t\t\t.enter()\n\t\t\t\t.append( 'g' );\n\n\t\t\tbarGroups\n\t\t\t\t.append( 'rect' )\n\t\t\t\t.attr( 'x', d => d.x )\n\t\t\t\t.attr( 'y', d => d.y )\n\t\t\t\t// .attr( 'fill', d => d.color )\n\t\t\t\t.attr( 'fill', d => d.color )\n\t\t\t\t.attr( 'height', d => d.height )\n\t\t\t\t.attr( 'width', d => d.width )\n\t\t\t\t.attr( 'stroke', d => d.color )\n\t\t\t\t.attr( 'opacity', 0.8 )\n\t\t\t\t.attr( 'stroke-width', d => '2' )\n\t\t\t\t.attr( 'rx', '5')\n\t\t\t\t.attr( 'class', `bar-${this.id} translate-${this.id}` );\n\n\t\t\tconst roundToNearestMultipleOfEight = num => Math.ceil( Math.ceil( num ) / 8 ) * 8;\n\t\t\treturn barGroups;\n\t\t},\n\n\n\t\tdrawBarLabels( barGroups ) {\n\t\t\tconst barLabelGroups = barGroups\n\t\t\t\t.append( 'g' );\n\t\t\tconst textLabels = barLabelGroups.append( 'text' )\n\t\t\t\t.attr( 'x', ( d, i ) => this.getTextX( i ) )\n\t\t\t\t.attr( 'y', ( d ) => {\n\t\t\t\t\tconst height = this.getHeight( d.value );\n\t\t\t\t\tconst y = this.getY( height );\n\t\t\t\t\treturn y - ( ( this.barLabelHeight / 2 ) + this.barLabelSpacing );\n\t\t\t\t} )\n\t\t\t\t.attr( 'class', 'bar-value' )\n\t\t\t\t.attr( 'text-anchor', 'middle' )\n\t\t\t\t.attr( 'dominant-baseline', 'middle' )\n\t\t\t\t.style( 'fill', d => d.color )\n\t\t\t\t.style( 'font-weight', 'bold' )\n\t\t\t\t.style( 'font-family', 'Roboto Slab' )\n\t\t\t\t.style( 'font-size', `${this.labelTextSize}px` )\n\t\t\t\t.text( d => formatNumber(d.value) );\n\t\t\tconst textDims = Array.from(\n\t\t\t\ttextLabels._groups[0]\n\t\t\t).map(\n\t\t\t\ttext => d3.select( text )\n\t\t\t\t\t.node()\n\t\t\t\t\t.getBBox()\n\t\t\t);\n\n\t\t},\n\t\tdrawXAxisIndicators( options ) {\n\t\t\tconst {\n\t\t\t\taxis,\n\t\t\t\tvalues,\n\t\t\t\tspaceBetweenLabelsAndChart,\n\t\t\t\tlabelStyle,\n\t\t\t} = options;\n\n\t\t\tconst getX = ( i ) => {\n\t\t\t\tconst { aw, l } = this;\n\n\t\t\t\treturn l + ( ( aw / ( values.length + 1 ) ) * ( i + 1 ) );\n\t\t\t};\n\n\t\t\tconst xAxisData = values.map( ( datum, i ) => {\n\n\t\t\t\tconst y = () => ( ( axis === 'x-top' ) ? this.t : this.t + this.ah );\n\t\t\t\tconst x = () => getX( i );\n\t\t\t\treturn {\n\t\t\t\t\t...datum,\n\t\t\t\t\tx,\n\t\t\t\t\ty,\n\t\t\t\t\ttextAnchor       : 'middle',\n\t\t\t\t\tdominantBaseline : ( axis === 'x-top' ) ? 'text-before-edge' : 'text-after-edge',\n\t\t\t\t};\n\t\t\t} );\n\n\t\t\tconst xAxisLabels = this.canvas\n\t\t\t\t.selectAll( 'x-axis-labels axis-label' )\n\t\t\t\t.data( xAxisData )\n\t\t\t\t.enter()\n\t\t\t\t.append( 'text' )\n\t\t\t\t.attr( 'text-anchor', d => d.textAnchor )\n\t\t\t\t.attr( 'x', ( d, i ) => this.getTextX( i ) )\n\t\t\t\t.attr( 'y', d => d.y() )\n\t\t\t\t.attr( 'dominant-baseline', d => d.dominantBaseline )\n\t\t\t\t.style( 'fill', colors.colorPrimary )\n\t\t\t\t.text( d => d.label );\n\n\t\t\tif ( labelStyle ) {\n\t\t\t\tthis.applyMethods( xAxisLabels, 'style', labelStyle );\n\t\t\t}\n\n\t\t\tconst xAxisLabelDims    = Array.from( xAxisLabels._groups[0] ).map( a => a.getBBox() );\n\t\t\tconst xAxisLabelHeights = xAxisLabelDims.map( a => a.height );\n\t\t\t// const xAxisLabelWidths  = xAxisLabelDims.map( a => a.width );\n\t\t\tconst biggestXAxisLabel = Math.max( ...xAxisLabelHeights );\n\n\t\t\tconst dims = ( () => {\n\t\t\t\tif ( axis === 'y-top' ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tt : biggestXAxisLabel + spaceBetweenLabelsAndChart,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tb : biggestXAxisLabel + spaceBetweenLabelsAndChart,\n\t\t\t\t};\n\t\t\t} )();\n\n\t\t\tthis.updateDims( dims );\n\t\t\tthis.realignAxisLabels();\n\n\t\t\t// ? center texts as necessary\n\t\t\t// const totalTextSpace = xAxisLabelWidths.reduce( ( sum, w ) => sum + w, 0 );\n\t\t\t// const leftOverSpace  = this.aw - totalTextSpace;\n\t\t\t// const spaceAround    = ( leftOverSpace / ( values.length + 1 ) );\n\n\t\t\treturn xAxisLabelDims;\n\n\t\t},\n\t\tgetX( i ) {\n\t\t\tconst {\n\t\t\t\tl,\n\t\t\t\tbarWidth,\n\t\t\t\tbarSpacing,\n\t\t\t} = this;\n\t\t\tconst x = l + ( barWidth * i ) + ( barSpacing * i ) + ( barSpacing / 2 );\n\t\t\treturn x;\n\t\t},\n\t\tgetY( height ) {\n\t\t\tconst { ah, t } = this;\n\t\t\treturn ah + t - height;\n\t\t},\n\t\tgetTextX( i ) {\n\t\t\tconst {\n\t\t\t\tl,\n\t\t\t\tbarWidth,\n\t\t\t\tbarSpacing\n\t\t\t} = this;\n\t\t\treturn ( l + ( barWidth * i ) + ( barSpacing * i ) + ( barWidth / 2 ) ) + ( barSpacing / 2 );\n\t\t},\n\t\tgetHeight( value ) {\n\t\t\tconst values = this.chart.data.map( entry => entry.value );\n\t\t\tconst { end } = this.getDataRange( values, false );\n\n\t\t\t// + this assumes that the bottom of the range\n\t\t\t// + is always zero\n\t\t\treturn ( value / end ) * this.ah;\n\t\t}\n\n\t}\n};\n</script>\n\n<style lang='scss'>\n\t.chart{\n\t\theight: 50%;\n\t\twidth: 100%;\n\t\tsvg {\n\t\t// flex: 2 2 0\n\t\tposition: relative;\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tborder: 0px;\n\t\t}\n\t}\n\t// .chart{\n\t// \tdisplay: flex;\n\t// \talign-items: stretch;\n\t// \twidth: 100%;\n\t// \theight: 200px;\n\t// \tpadding:0;\n\t// \tsvg {\n\t// \t// flex: 2 2 0\n\t// \tposition: relative;\n\t// \theight: 100%;\n\t// \twidth: 100%;\n\t// \tborder: 0px;;\n\t// \t}\n\t// }\n\n</style>\n"],"sourceRoot":"src/components/charts"}]}
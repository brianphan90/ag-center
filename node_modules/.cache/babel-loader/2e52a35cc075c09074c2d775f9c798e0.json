{"remainingRequest":"/Users/brianphan/jets/kf-grower-portal/node_modules/babel-loader/lib/index.js!/Users/brianphan/jets/kf-grower-portal/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/brianphan/jets/kf-grower-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brianphan/jets/kf-grower-portal/src/components/ChartLegend.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brianphan/jets/kf-grower-portal/src/components/ChartLegend.vue","mtime":1615337765259},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNwbGl0LmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5maWx0ZXIuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnY2hhcnQtbGVnZW5kJywKICBwcm9wczogewogICAgbGVnZW5kOiB7CiAgICAgIHR5cGU6IFtPYmplY3QsIEFycmF5XSwKICAgICAgcmVxdWlyZWQ6IHRydWUKICAgIH0sCiAgICBjb2x1bW5zOiB7CiAgICAgIHR5cGU6IFtOdW1iZXIsIFN0cmluZ10sCiAgICAgIGRlZmF1bHQ6IDQKICAgIH0KICB9LAogIGNvbXB1dGVkOiB7CiAgICBncmlkVGVtcGxhdGVDb2x1bW5zOiBmdW5jdGlvbiBncmlkVGVtcGxhdGVDb2x1bW5zKCkgewogICAgICBpZiAodHlwZW9mIHRoaXMuY29sdW1ucyA9PT0gJ3N0cmluZycpIHsKICAgICAgICByZXR1cm4gdGhpcy5jb2x1bW5zOwogICAgICB9CgogICAgICB2YXIgc3RyID0gJyc7CgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuY29sdW1uczsgaSArPSAxKSB7CiAgICAgICAgc3RyICs9ICdhdXRvJzsKCiAgICAgICAgaWYgKGkgPCB0aGlzLmNvbHVtbnMgLSAxKSB7CiAgICAgICAgICBzdHIgKz0gJyAnOwogICAgICAgIH0KICAgICAgfQoKICAgICAgcmV0dXJuIHN0cjsKICAgIH0sCiAgICBudW1iZXJPZkNvbHVtbnM6IGZ1bmN0aW9uIG51bWJlck9mQ29sdW1ucygpIHsKICAgICAgcmV0dXJuIHRoaXMuZ3JpZFRlbXBsYXRlQ29sdW1ucy5zcGxpdCgnICcpLmxlbmd0aDsKICAgIH0sCiAgICBzaGFwZWRJdGVtS2V5czogZnVuY3Rpb24gc2hhcGVkSXRlbUtleXMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBpZiAoQXJyYXkuaXNBcnJheSh0aGlzLmxlZ2VuZCkpIHsKICAgICAgICByZXR1cm4gdGhpcy5sZWdlbmQubWFwKGZ1bmN0aW9uIChpdGVtLCBpKSB7CiAgICAgICAgICByZXR1cm4gaTsKICAgICAgICB9KS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgICByZXR1cm4gYS5vcmRlciAtIGIub3JkZXI7CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBPYmplY3Qua2V5cyh0aGlzLmxlZ2VuZCkuZmlsdGVyKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICByZXR1cm4gIV90aGlzLmxlZ2VuZFtrZXldLnRpdGxlOwogICAgICB9KS5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgcmV0dXJuIGEub3JkZXIgLSBiLm9yZGVyOwogICAgICB9KTsKICAgIH0sCiAgICByZW1haW5kZXJJbkZpbmFsUm93OiBmdW5jdGlvbiByZW1haW5kZXJJbkZpbmFsUm93KCkgewogICAgICByZXR1cm4gdGhpcy5zaGFwZWRJdGVtS2V5cy5sZW5ndGggJSB0aGlzLm51bWJlck9mQ29sdW1uczsKICAgIH0sCiAgICBudW1iZXJPZlJvd3NPZlNoYXBlZEl0ZW1zOiBmdW5jdGlvbiBudW1iZXJPZlJvd3NPZlNoYXBlZEl0ZW1zKCkgewogICAgICByZXR1cm4gdGhpcy5udW1iZXJPZkZ1bGxSb3dzT2ZTaGFwZWRJdGVtcyArICh0aGlzLnJlbWFpbmRlckluRmluYWxSb3cgPyAxIDogMCk7CiAgICB9LAogICAgbnVtYmVyT2ZGdWxsUm93c09mU2hhcGVkSXRlbXM6IGZ1bmN0aW9uIG51bWJlck9mRnVsbFJvd3NPZlNoYXBlZEl0ZW1zKCkgewogICAgICByZXR1cm4gTWF0aC5mbG9vcih0aGlzLnNoYXBlZEl0ZW1LZXlzLmxlbmd0aCAvIHRoaXMubnVtYmVyT2ZDb2x1bW5zKTsKICAgIH0sCiAgICBzaGFwZWRJdGVtczogZnVuY3Rpb24gc2hhcGVkSXRlbXMoKSB7CiAgICAgIHZhciBudW1iZXJPZkNvbHVtbnMgPSB0aGlzLm51bWJlck9mQ29sdW1uczsKICAgICAgdmFyIHNoYXBlZEl0ZW1zID0gW107IC8vIHRoZSBpZGVhIGlzIHRoYXQgd2Ugd2FudCB0aGUgaXRlbXMgdG8gZGlzcGxheSB0b3AgdG8gYm90dG9tIG1vdmluZwogICAgICAvLyBvbiB0byBhbm90aGVyIGNvbHVtbiBvbmNlIHRoZSBmaXJzdCBjb2x1bW4gaXMgZmluaXNoZWQgaW5zdGVhZCBvZgogICAgICAvLyB0aGUgZGVmYXVsdCBtb3ZpbmcgZnJvbSBvbmUgcm93IHRvIHRoZSBuZXh0IGFmdGVyIHRoZSByb3cgaXMgZmlsbGVkCgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuc2hhcGVkSXRlbUtleXMubGVuZ3RoOyBpICs9IDEpIHsKICAgICAgICB2YXIgY29sTnVtID0gaSAlIG51bWJlck9mQ29sdW1uczsKICAgICAgICB2YXIgcm93TnVtID0gTWF0aC5mbG9vcihpIC8gbnVtYmVyT2ZDb2x1bW5zKTsKICAgICAgICB2YXIgZGVzaXJlZEluZGV4ID0gY29sTnVtICogdGhpcy5udW1iZXJPZkZ1bGxSb3dzT2ZTaGFwZWRJdGVtcyArIHJvd051bTsKCiAgICAgICAgaWYgKHRoaXMucmVtYWluZGVySW5GaW5hbFJvdyAmJiBjb2xOdW0gKyAxID4gdGhpcy5yZW1haW5kZXJJbkZpbmFsUm93KSB7CiAgICAgICAgICBkZXNpcmVkSW5kZXggKz0gMTsKICAgICAgICB9CgogICAgICAgIHNoYXBlZEl0ZW1zLnB1c2godGhpcy5sZWdlbmRbdGhpcy5zaGFwZWRJdGVtS2V5c1tkZXNpcmVkSW5kZXhdXSk7CiAgICAgIH0KCiAgICAgIHJldHVybiBzaGFwZWRJdGVtczsKICAgIH0sCiAgICB0aXRsZWRJdGVtczogZnVuY3Rpb24gdGl0bGVkSXRlbXMoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgaWYgKEFycmF5LmlzQXJyYXkodGhpcy5sZWdlbmQpKSB7CiAgICAgICAgcmV0dXJuIHRoaXMubGVnZW5kLmZpbHRlcihmdW5jdGlvbiAoaXRlbSkgewogICAgICAgICAgcmV0dXJuIGl0ZW0udGl0bGU7CiAgICAgICAgfSkuc29ydChmdW5jdGlvbiAoYSwgYikgewogICAgICAgICAgcmV0dXJuIGEub3JkZXIgLSBiLm9yZGVyOwogICAgICAgIH0pOwogICAgICB9CgogICAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHRoaXMubGVnZW5kKTsKICAgICAgcmV0dXJuIGtleXMuZmlsdGVyKGZ1bmN0aW9uIChrZXkpIHsKICAgICAgICByZXR1cm4gX3RoaXMyLmxlZ2VuZFtrZXldLnRpdGxlOwogICAgICB9KS5tYXAoZnVuY3Rpb24gKGtleSkgewogICAgICAgIHJldHVybiBfdGhpczIubGVnZW5kW2tleV07CiAgICAgIH0pLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHsKICAgICAgICByZXR1cm4gYS5vcmRlciAtIGIub3JkZXI7CiAgICAgIH0pOwogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgZ2V0U3R5bGU6IGZ1bmN0aW9uIGdldFN0eWxlKGl0ZW0pIHsKICAgICAgaWYgKGl0ZW0uc3R5bGUgPT09ICdzdHJpcGVkJykgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICBib3JkZXI6ICIycHggc29saWQgIi5jb25jYXQoaXRlbS5jb2xvciksCiAgICAgICAgICBiYWNrZ3JvdW5kOiAicmVwZWF0aW5nLWxpbmVhci1ncmFkaWVudChcblx0XHRcdFx0XHRcdHRyYW5zcGFyZW50IDRweCxcblx0XHRcdFx0XHRcdCIuY29uY2F0KGl0ZW0uY29sb3IsICIgNHB4LFxuXHRcdFx0XHRcdFx0IikuY29uY2F0KGl0ZW0uY29sb3IsICIgNXB4LFxuXHRcdFx0XHRcdFx0dHJhbnNwYXJlbnQgNXB4LFxuXHRcdFx0XHRcdFx0dHJhbnNwYXJlbnQgN3B4LFxuXHRcdFx0XHRcdFx0IikuY29uY2F0KGl0ZW0uY29sb3IsICIgN3B4LFxuXHRcdFx0XHRcdFx0IikuY29uY2F0KGl0ZW0uY29sb3IsICIgOHB4XG5cdFx0XHRcdFx0KSIpCiAgICAgICAgfTsKICAgICAgfQoKICAgICAgcmV0dXJuIHsKICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6IGl0ZW0uY29sb3IsCiAgICAgICAgYm9yZGVyQm90dG9tQ29sb3I6IGl0ZW0uY29sb3IKICAgICAgfTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["ChartLegend.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang='pug'>\nlegend(:style='{ gridTemplateColumns }')\n\t.item(v-for='item in shapedItems')\n\t\t.shape(\n\t\t\t:class='[item.shape || \"square\", item.style]'\n\t\t\t:style='getStyle( item )'\n\t\t)\n\t\tlabel.dynamic-mode-text {{ item.label }}\n\t.item.titled-legend-item(\n\t\tv-for='( item, i ) in titledItems'\n\t\t:style='{ gridRowStart : numberOfRowsOfShapedItems + i + 1, gridColumn : `1 / ${numberOfColumns + 1}` }'\n\t)\n\t\tp.legend-item-title.dynamic-mode-text {{ item.title }}\n\t\tlabel.dynamic-mode-text {{ item.label }}\n</template>\n\n<script>\nexport default {\n\tname  : 'chart-legend',\n\tprops : {\n\t\tlegend : {\n\t\t\ttype     : [Object, Array],\n\t\t\trequired : true,\n\t\t},\n\t\tcolumns : {\n\t\t\ttype    : [Number, String],\n\t\t\tdefault : 4,\n\t\t}\n\t},\n\tcomputed : {\n\t\tgridTemplateColumns() {\n\t\t\tif ( typeof this.columns === 'string' ) {\n\t\t\t\treturn this.columns;\n\t\t\t}\n\t\t\tlet str = '';\n\t\t\tfor ( let i = 0; i < this.columns; i += 1 ) {\n\t\t\t\tstr += 'auto';\n\t\t\t\tif ( i < ( this.columns - 1 ) ) {\n\t\t\t\t\tstr += ' ';\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn str;\n\t\t},\n\t\tnumberOfColumns() {\n\t\t\treturn this.gridTemplateColumns.split( ' ' ).length;\n\t\t},\n\t\tshapedItemKeys() {\n\t\t\tif ( Array.isArray( this.legend ) ) {\n\t\t\t\treturn this.legend.map( ( item, i ) => i )\n\t\t\t\t\t.sort( ( a, b ) => a.order - b.order );\n\t\t\t}\n\t\t\treturn Object.keys( this.legend ).filter( key => !this.legend[key].title )\n\t\t\t\t.sort( ( a, b ) => a.order - b.order );\n\t\t},\n\t\tremainderInFinalRow() {\n\t\t\treturn this.shapedItemKeys.length % this.numberOfColumns;\n\t\t},\n\t\tnumberOfRowsOfShapedItems() {\n\t\t\treturn this.numberOfFullRowsOfShapedItems + ( this.remainderInFinalRow ? 1 : 0 );\n\t\t},\n\t\tnumberOfFullRowsOfShapedItems() {\n\t\t\treturn Math.floor( this.shapedItemKeys.length / this.numberOfColumns );\n\t\t},\n\t\tshapedItems() {\n\t\t\tconst { numberOfColumns } = this;\n\t\t\tconst shapedItems = [];\n\t\t\t// the idea is that we want the items to display top to bottom moving\n\t\t\t// on to another column once the first column is finished instead of\n\t\t\t// the default moving from one row to the next after the row is filled\n\t\t\tfor ( let i = 0; i < this.shapedItemKeys.length; i += 1 ) {\n\t\t\t\tconst colNum     = ( i % numberOfColumns );\n\t\t\t\tconst rowNum     = Math.floor( i / numberOfColumns );\n\t\t\t\tlet desiredIndex = ( colNum * this.numberOfFullRowsOfShapedItems ) + rowNum;\n\t\t\t\tif ( this.remainderInFinalRow && ( colNum + 1 ) > this.remainderInFinalRow ) {\n\t\t\t\t\tdesiredIndex += 1;\n\t\t\t\t}\n\t\t\t\tshapedItems.push( this.legend[this.shapedItemKeys[desiredIndex]] );\n\t\t\t}\n\n\t\t\treturn shapedItems;\n\t\t},\n\t\ttitledItems() {\n\t\t\tif ( Array.isArray( this.legend ) ) {\n\t\t\t\treturn this.legend.filter( item => item.title )\n\t\t\t\t\t.sort( ( a, b ) => a.order - b.order );\n\t\t\t}\n\t\t\tconst keys = Object.keys( this.legend );\n\t\t\treturn keys.filter( key => this.legend[key].title )\n\t\t\t\t.map( key => this.legend[key] )\n\t\t\t\t.sort( ( a, b ) => a.order - b.order );\n\t\t}\n\t},\n\tmethods : {\n\t\tgetStyle( item ) {\n\t\t\tif ( item.style === 'striped' ) {\n\t\t\t\treturn {\n\t\t\t\t\tborder     : `2px solid ${item.color}`,\n\t\t\t\t\tbackground : `repeating-linear-gradient(\n\t\t\t\t\t\ttransparent 4px,\n\t\t\t\t\t\t${item.color} 4px,\n\t\t\t\t\t\t${item.color} 5px,\n\t\t\t\t\t\ttransparent 5px,\n\t\t\t\t\t\ttransparent 7px,\n\t\t\t\t\t\t${item.color} 7px,\n\t\t\t\t\t\t${item.color} 8px\n\t\t\t\t\t)`\n\t\t\t\t};\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tbackgroundColor   : item.color,\n\t\t\t\tborderBottomColor : item.color\n\t\t\t};\n\t\t},\n\t},\n};\n</script>\n\n<style lang='scss'>\nlegend {\n\tdisplay: grid;\n\tgrid-column-gap: 10px;\n\tgrid-row-gap: 5px;\n\t.item {\n\t\tdisplay: flex;\n\t\t// align-items: center;\n\t\t&:not(.titled-legend-item) + .titled-legend-item {\n\t\t\tmargin-top: 15px;\n\t\t}\n\t\t.shape {\n\t\t\tmargin-right: 10px;\n\t\t}\n\t\tp,\n\t\tlabel {\n\t\t\ttext-align: left;\n\t\t\tfont-size: 12px;\n\t\t}\n\t\tp {\n\t\t\tfont-weight: 600;\n\t\t}\n\t\tp + label {\n\t\t\tmargin-left: 10px;\n\t\t}\n\t}\n}\n</style>\n"],"sourceRoot":"src/components"}]}
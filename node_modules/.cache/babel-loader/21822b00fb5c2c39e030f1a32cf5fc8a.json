{"remainingRequest":"/Users/brianphan/jets/kf-grower-portal/node_modules/babel-loader/lib/index.js!/Users/brianphan/jets/kf-grower-portal/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/brianphan/jets/kf-grower-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brianphan/jets/kf-grower-portal/src/components/charts/InsectBarChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brianphan/jets/kf-grower-portal/src/components/charts/InsectBarChart.vue","mtime":1617306999853},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9vYmplY3RTcHJlYWQgZnJvbSAiL1VzZXJzL2JyaWFucGhhbi9qZXRzL2tmLWdyb3dlci1wb3J0YWwvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL29iamVjdFNwcmVhZDIiOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIi9Vc2Vycy9icmlhbnBoYW4vamV0cy9rZi1ncm93ZXItcG9ydGFsL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5Lm1hcC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmcuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkucmVkdWNlLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZnJvbS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pdGVyYXRvci5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7Ci8vCi8vCi8vCi8vCi8vCgovKiBlc2xpbnQtZGlzYWJsZSovCmltcG9ydCBmb3JtYXROdW1iZXIgZnJvbSAnQC9saWIvdXRpbHMvZm9ybWF0TnVtYmVyJzsKaW1wb3J0IGNvbG9ycyBmcm9tICdAL2Fzc2V0cy9qcy9jb2xvcnMnOwppbXBvcnQgKiBhcyBkMyBmcm9tICdkMyc7CmltcG9ydCBCYXNlQ2hhcnQgZnJvbSAnLi9CYXNlQ2hhcnQnOwppbXBvcnQgQ2hhcnRMZWdlbmQgZnJvbSAnLi4vQ2hhcnRMZWdlbmQnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ3F1YWxpdHktYmFyLWNoYXJ0JywKICBleHRlbmRzOiBCYXNlQ2hhcnQsCiAgcHJvcHM6IHsKICAgIGNoYXJ0OiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGxhYmVsOiAnUG91bmRzIFByb2R1Y2VkIGluIEZha2UgRGF0YScsCiAgICAgICAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKCksCiAgICAgICAgICBkYXRhOiBbewogICAgICAgICAgICB2YWx1ZTogMjIwLAogICAgICAgICAgICBsYWJlbDogJ0FsbCBGaWVsZHMnLAogICAgICAgICAgICBjb2xvcjogJyNFNUJGMTEnCiAgICAgICAgICB9XQogICAgICAgIH07CiAgICAgIH0KICAgIH0sCiAgICBvcHRpb25zOiB7CiAgICAgIHR5cGU6IE9iamVjdCwKICAgICAgZGVmYXVsdDogZnVuY3Rpb24gX2RlZmF1bHQoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIGhhc0JhckxhYmVsczogdHJ1ZQogICAgICAgIH07CiAgICAgIH0KICAgIH0KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBiYXJMYWJlbEhlaWdodDogMzAsCiAgICAgIGJhckxhYmVsU3BhY2luZzogNQogICAgfTsKICB9LAogIGNvbXBvbmVudHM6IHsKICAgIENoYXJ0TGVnZW5kOiBDaGFydExlZ2VuZAogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGJhcldpZHRoOiBmdW5jdGlvbiBiYXJXaWR0aCgpIHsKICAgICAgdmFyIGF3ID0gdGhpcy5hdzsKICAgICAgcmV0dXJuIDUwOyAvLyByZXR1cm4gTWF0aC5taW4oIGF3IC8gdGhpcy5jaGFydC5kYXRhLmxlbmd0aCwgMzAgKTsKICAgIH0sCiAgICBiYXJTcGFjaW5nOiBmdW5jdGlvbiBiYXJTcGFjaW5nKCkgewogICAgICB2YXIgYmFyV2lkdGggPSB0aGlzLmJhcldpZHRoLAogICAgICAgICAgZGF0YSA9IHRoaXMuZGF0YSwKICAgICAgICAgIGF3ID0gdGhpcy5hdzsgLy8gY29uc29sZS5sb2coIGJhcldpZHRoICk7CgogICAgICByZXR1cm4gKGF3IC0gYmFyV2lkdGggKiB0aGlzLmNoYXJ0LmRhdGEubGVuZ3RoKSAvIHRoaXMuY2hhcnQuZGF0YS5sZW5ndGg7CiAgICB9LAogICAgbGFiZWxUZXh0U2l6ZTogZnVuY3Rpb24gbGFiZWxUZXh0U2l6ZSgpIHsKICAgICAgcmV0dXJuIHRoaXMuYmFyV2lkdGggKiAwLjc1OwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIC8vIGNvbnNvbGUubG9nKCdtb3VudGVkIEJhckNoYXJ0Jyk7CiAgICB0aGlzLmluaXQodGhpcy4kcmVmcy5zdmcpOwogIH0sCiAgbWV0aG9kczogewogICAgZHJhdzogZnVuY3Rpb24gZHJhdygpIHsKICAgICAgdGhpcy51cGRhdGVEaW1zKHsKICAgICAgICBsOiA1LAogICAgICAgIHI6IDUsCiAgICAgICAgdDogMzAKICAgICAgfSk7CgogICAgICB2YXIgX3RoaXMkY2hhcnQkZGF0YSRtYXAgPSB0aGlzLmNoYXJ0LmRhdGEubWFwKGZ1bmN0aW9uIChlbnRyeSkgewogICAgICAgIHJldHVybiBlbnRyeS5sYWJlbDsKICAgICAgfSksCiAgICAgICAgICB2YWx1ZXMgPSBfdGhpcyRjaGFydCRkYXRhJG1hcC52YWx1ZXM7CgogICAgICB2YXIgeVZhbHVlcyA9IHRoaXMuY2hhcnQuZGF0YS5tYXAoZnVuY3Rpb24gKGVudHJ5KSB7CiAgICAgICAgcmV0dXJuIGVudHJ5LnZhbHVlOwogICAgICB9KTsgLy8gY29uc3Qgc3VtID0gT2JqZWN0LmtleXMoIHZhbHVlcyApLnJlZHVjZSggKCB0b3RhbCwga2V5ICkgPT4gdG90YWwgKyB2YWx1ZXNba2V5XSwgMCApOwoKICAgICAgdmFyIHN1bSA9IHRoaXMuZ2V0RGF0YVJhbmdlKHlWYWx1ZXMsIGZhbHNlKS5lbmQ7IC8vIGNvbnN0IHlWYWx1ZXMgPSB0aGlzLmNoYXJ0LmRhdGFbMF0ubWFwKCBkYXR1bSA9PiBkYXR1bS52YWx1ZSApOwoKICAgICAgdmFyIHJhbmdlID0gewogICAgICAgIHN0YXJ0OiAwLAogICAgICAgIGVuZDogc3VtCiAgICAgIH07CgogICAgICBpZiAodGhpcy5oYXNCYXJMYWJlbHMpIHsKICAgICAgICB0aGlzLnVwZGF0ZURpbXMoewogICAgICAgICAgdDogdGhpcy50ICsgdGhpcy5iYXJMYWJlbEhlaWdodCArIHRoaXMuYmFyTGFiZWxTcGFjaW5nCiAgICAgICAgfSk7CiAgICAgIH0gLy8gZHJhdyB5LWF4aXMgbGFiZWxzCgoKICAgICAgdmFyIHlBeGlzRGF0YSA9IHRoaXMuZHJhd0F4aXNJbmRpY2F0b3JzKHsKICAgICAgICBheGlzOiAneS1yaWdodCcsCiAgICAgICAgdHJhbnNmb3JtTGFiZWw6IGZ1bmN0aW9uIHRyYW5zZm9ybUxhYmVsKHRleHQpIHsKICAgICAgICAgIHJldHVybiBmb3JtYXROdW1iZXIodGV4dCk7CiAgICAgICAgfSwKICAgICAgICBsaW5lczogewogICAgICAgICAgbnVtYmVyT2ZJbmRpY2F0b3JzOiA2LAogICAgICAgICAgc3BhY2VCZXR3ZWVuTGFiZWxzQW5kTGluZXM6IDEwCiAgICAgICAgfSwKICAgICAgICBjb2xvcjogY29sb3JzLmNvbG9yUHJpbWFyeSwKICAgICAgICBkaWZmZXJlbnRGaXJzdEFuZExhc3RMYWJlbHM6IGZhbHNlLAogICAgICAgIHJhbmdlOiByYW5nZQogICAgICB9KTsgLy8gY29uc29sZS5sb2coIHlBeGlzRGF0YSApOwogICAgICAvLyBkcmF3IHgtYXhpcyBsYWJlbHMKCiAgICAgIHZhciB4QXhpc0RhdGEgPSB0aGlzLmRyYXdBeGlzSW5kaWNhdG9ycyh7CiAgICAgICAgYXhpczogJ3gtYm90dG9tJywKICAgICAgICB2YWx1ZXM6IHRoaXMuY2hhcnQuZGF0YSwKICAgICAgICBzcGFjZUJldHdlZW5MYWJlbHNBbmRDaGFydDogMTAsCiAgICAgICAgbGFiZWxTdHlsZTogW1snZm9udC1zaXplJywgJzE0cHgnXSwgWydmb250LXdlaWdodCcsICc3MDAnXSwgWydmb250LWZhbWlseScsICciTWFuamFyaSIsIHNhbnMtc2VyaWYnXV0KICAgICAgfSk7IC8vIENvbXB1dGUgdGhlIHBvc2l0aW9uIGFuZCBzaXplIG9mIHRoZSBiYXJzCgogICAgICB2YXIgYmFyRGF0YSA9IHRoaXMubmV3Q29tcHV0ZUJhckRhdGEoKTsKICAgICAgdmFyIGJhckdyb3VwcyA9IHRoaXMubmV3RHJhd0JhcnMoYmFyRGF0YSk7CiAgICAgIHRoaXMuZHJhd0JhckxhYmVscyhiYXJHcm91cHMpOwogICAgfSwKICAgIG5ld0NvbXB1dGVCYXJEYXRhOiBmdW5jdGlvbiBuZXdDb21wdXRlQmFyRGF0YSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciB2YWx1ZXMgPSB0aGlzLmNoYXJ0LmRhdGEubWFwKGZ1bmN0aW9uIChlbnRyeSkgewogICAgICAgIHJldHVybiBlbnRyeS52YWx1ZTsKICAgICAgfSk7CgogICAgICB2YXIgX3RoaXMkZ2V0RGF0YVJhbmdlID0gdGhpcy5nZXREYXRhUmFuZ2UodmFsdWVzLCBmYWxzZSksCiAgICAgICAgICBlbmQgPSBfdGhpcyRnZXREYXRhUmFuZ2UuZW5kOwoKICAgICAgdmFyIHN1bSA9IHRoaXMuY2hhcnQuZGF0YS5yZWR1Y2UoZnVuY3Rpb24gKHRvdGFsLCBlbnRyeSkgewogICAgICAgIHJldHVybiB0b3RhbCArIGVudHJ5LnZhbHVlOwogICAgICB9LCAwKTsKICAgICAgcmV0dXJuIHRoaXMuY2hhcnQuZGF0YS5tYXAoZnVuY3Rpb24gKGVudHJ5LCBpKSB7CiAgICAgICAgdmFyIHZhbHVlID0gZW50cnkudmFsdWU7CiAgICAgICAgdmFyIGhlaWdodCA9IHZhbHVlIC8gZW5kICogX3RoaXMuYWg7CiAgICAgICAgdmFyIHkgPSBfdGhpcy50ICsgKF90aGlzLmFoIC0gaGVpZ2h0KTsKICAgICAgICByZXR1cm4gewogICAgICAgICAgd2lkdGg6IF90aGlzLmJhcldpZHRoLAogICAgICAgICAgY29sb3I6IGVudHJ5LmNvbG9yLAogICAgICAgICAgeDogX3RoaXMuZ2V0WChpKSwKICAgICAgICAgIC8vIHggICAgIDogdGhpcy5sICsgeERpbXNbaV0ueCwKICAgICAgICAgIGxhYmVsOiBlbnRyeS5sYWJlbCwKICAgICAgICAgIHZhbHVlOiBlbnRyeS52YWx1ZSwKICAgICAgICAgIHk6IHksCiAgICAgICAgICBoZWlnaHQ6IGhlaWdodAogICAgICAgIH07CiAgICAgIH0pOwogICAgfSwKICAgIG5ld0RyYXdYYXhpczogZnVuY3Rpb24gbmV3RHJhd1hheGlzKGJhckdyb3VwcykgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHZhciB4QXhpc0xhYmVscyA9IGJhckdyb3Vwcy5hcHBlbmQoJ3RleHQnKS5hdHRyKCdjbGFzcycsICd4LWF4aXMtbGFiZWxzJykuYXR0cigneCcsIGZ1bmN0aW9uIChkLCBpKSB7CiAgICAgICAgcmV0dXJuIF90aGlzMi5nZXRUZXh0WChpKTsKICAgICAgfSkuYXR0cigneScsIHRoaXMudCArIHRoaXMuYWgpLmF0dHIoJ3RleHQtYW5jaG9yJywgJ21pZGRsZScpLmF0dHIoJ2RvbWluYW50LWJhc2VsaW5lJywgJ3N0YXJ0Jykuc3R5bGUoJ2ZvbnQtc2l6ZScsICcxMnB4JykudGV4dChmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLmxhYmVsOwogICAgICB9KTsKICAgICAgdGhpcy5jaGFuZ2VXaXRoTW9kZSh7CiAgICAgICAgbm9kZXM6IHhBeGlzTGFiZWxzLAogICAgICAgIG9wdGlvbnM6IHsKICAgICAgICAgIGRheTogewogICAgICAgICAgICBzdHlsZTogW1snZmlsbCcsIGNvbG9ycy5ncmV5XV0KICAgICAgICAgIH0sCiAgICAgICAgICBuaWdodDogewogICAgICAgICAgICBzdHlsZTogW1snZmlsbCcsIGNvbG9ycy53aGl0ZV1dCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KTsKICAgICAgdmFyIGJhckxhYmVsTm9kZXMgPSBiYXJHcm91cHMuc2VsZWN0QWxsKCcueC1heGlzLWxhYmVscycpOwogICAgICB2YXIgYmFyTGFiZWxXaWR0aHMgPSBBcnJheS5mcm9tKGJhckxhYmVsTm9kZXMuX2dyb3Vwc1swXSkubWFwKGZ1bmN0aW9uIChhKSB7CiAgICAgICAgcmV0dXJuIGEuZ2V0QkJveCgpLmhlaWdodDsKICAgICAgfSk7CiAgICAgIHZhciBiaWdnZXN0QmFyTGFiZWwgPSBNYXRoLm1heC5hcHBseShNYXRoLCBfdG9Db25zdW1hYmxlQXJyYXkoYmFyTGFiZWxXaWR0aHMpKTsKICAgICAgdmFyIHNwYWNlQmV0d2VlbkJhckFuZFhBeGlzID0gMjsKICAgICAgdGhpcy51cGRhdGVEaW1zKHsKICAgICAgICBiOiBiaWdnZXN0QmFyTGFiZWwgKyBzcGFjZUJldHdlZW5CYXJBbmRYQXhpcwogICAgICB9KTsKICAgICAgcmV0dXJuIHhBeGlzTGFiZWxzOwogICAgfSwKICAgIG5ld0RyYXdCYXJzOiBmdW5jdGlvbiBuZXdEcmF3QmFycyhiYXJEYXRhKSB7CiAgICAgIHZhciBiYXJHcm91cHMgPSB0aGlzLmNhbnZhcy5zZWxlY3RBbGwoImJhcnMtIi5jb25jYXQodGhpcy5pZCkpLmRhdGEoYmFyRGF0YSkuZW50ZXIoKS5hcHBlbmQoJ2cnKTsKICAgICAgYmFyR3JvdXBzLmFwcGVuZCgncmVjdCcpLmF0dHIoJ3gnLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLng7CiAgICAgIH0pLmF0dHIoJ3knLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLnk7CiAgICAgIH0pIC8vIC5hdHRyKCAnZmlsbCcsIGQgPT4gZC5jb2xvciApCiAgICAgIC5hdHRyKCdmaWxsJywgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC5jb2xvcjsKICAgICAgfSkuYXR0cignaGVpZ2h0JywgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC5oZWlnaHQ7CiAgICAgIH0pLmF0dHIoJ3dpZHRoJywgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC53aWR0aDsKICAgICAgfSkuYXR0cignc3Ryb2tlJywgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gZC5jb2xvcjsKICAgICAgfSkuYXR0cignb3BhY2l0eScsIDAuOCkuYXR0cignc3Ryb2tlLXdpZHRoJywgZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gJzInOwogICAgICB9KS5hdHRyKCdyeCcsICcwJykuYXR0cignY2xhc3MnLCAiYmFyLSIuY29uY2F0KHRoaXMuaWQsICIgdHJhbnNsYXRlLSIpLmNvbmNhdCh0aGlzLmlkKSk7CgogICAgICB2YXIgcm91bmRUb05lYXJlc3RNdWx0aXBsZU9mRWlnaHQgPSBmdW5jdGlvbiByb3VuZFRvTmVhcmVzdE11bHRpcGxlT2ZFaWdodChudW0pIHsKICAgICAgICByZXR1cm4gTWF0aC5jZWlsKE1hdGguY2VpbChudW0pIC8gOCkgKiA4OwogICAgICB9OwoKICAgICAgcmV0dXJuIGJhckdyb3VwczsKICAgIH0sCiAgICBkcmF3QmFyTGFiZWxzOiBmdW5jdGlvbiBkcmF3QmFyTGFiZWxzKGJhckdyb3VwcykgewogICAgICB2YXIgX3RoaXMzID0gdGhpczsKCiAgICAgIHZhciBiYXJMYWJlbEdyb3VwcyA9IGJhckdyb3Vwcy5hcHBlbmQoJ2cnKTsKICAgICAgdmFyIHRleHRMYWJlbHMgPSBiYXJMYWJlbEdyb3Vwcy5hcHBlbmQoJ3RleHQnKS5hdHRyKCd4JywgZnVuY3Rpb24gKGQsIGkpIHsKICAgICAgICByZXR1cm4gX3RoaXMzLmdldFRleHRYKGkpIC0gOTA7CiAgICAgIH0pLmF0dHIoJ3knLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHZhciBoZWlnaHQgPSBfdGhpczMuZ2V0SGVpZ2h0KGQudmFsdWUpOwoKICAgICAgICB2YXIgeSA9IF90aGlzMy5nZXRZKGhlaWdodCk7CgogICAgICAgIHJldHVybiB5IC0gKF90aGlzMy5iYXJMYWJlbEhlaWdodCAvIDIgKyBfdGhpczMuYmFyTGFiZWxTcGFjaW5nKTsKICAgICAgfSkuYXR0cignY2xhc3MnLCAnYmFyLXZhbHVlJykuYXR0cigndGV4dC1hbmNob3InLCAnbWlkZGxlJykuYXR0cignZG9taW5hbnQtYmFzZWxpbmUnLCAnbWlkZGxlJykuc3R5bGUoJ2ZpbGwnLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLmNvbG9yOwogICAgICB9KS5zdHlsZSgnZm9udC13ZWlnaHQnLCAnYm9sZCcpLnN0eWxlKCdmb250LWZhbWlseScsICdSb2JvdG8gU2xhYicpLnN0eWxlKCdmb250LXNpemUnLCAiIi5jb25jYXQodGhpcy5sYWJlbFRleHRTaXplLCAicHgiKSkudGV4dChmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBmb3JtYXROdW1iZXIoZC52YWx1ZSk7CiAgICAgIH0pOwogICAgICBiYXJMYWJlbEdyb3Vwcy5hcHBlbmQoJ3RleHQnKS5hdHRyKCd4JywgZnVuY3Rpb24gKGQsIGkpIHsKICAgICAgICByZXR1cm4gX3RoaXMzLmdldFRleHRYKGkpIC0gOTA7CiAgICAgIH0pLmF0dHIoJ3knLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHZhciBoZWlnaHQgPSBfdGhpczMuZ2V0SGVpZ2h0KGQudmFsdWUpOwoKICAgICAgICB2YXIgeSA9IF90aGlzMy5nZXRZKGhlaWdodCk7CgogICAgICAgIHJldHVybiB5IC0gKF90aGlzMy5iYXJMYWJlbEhlaWdodCAvIDIgKyBfdGhpczMuYmFyTGFiZWxTcGFjaW5nKSArIDMwOwogICAgICB9KS5hdHRyKCdjbGFzcycsICdiYXItdmFsdWUnKS5hdHRyKCd0ZXh0LWFuY2hvcicsICdtaWRkbGUnKS5hdHRyKCdkb21pbmFudC1iYXNlbGluZScsICdtaWRkbGUnKS5zdHlsZSgnZmlsbCcsIGNvbG9ycy5jb2xvclByaW1hcnkpLnN0eWxlKCdmb250LWZhbWlseScsICdSb2JvdG8gU2xhYicpLnN0eWxlKCdmb250LXNpemUnLCAiMjBweCIpLnRleHQoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gIlBvdW5kcyI7CiAgICAgIH0pOwogICAgICBiYXJMYWJlbEdyb3Vwcy5hcHBlbmQoJ3RleHQnKS5hdHRyKCd4JywgZnVuY3Rpb24gKGQsIGkpIHsKICAgICAgICByZXR1cm4gX3RoaXMzLmdldFRleHRYKGkpIC0gOTA7CiAgICAgIH0pLmF0dHIoJ3knLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHZhciBoZWlnaHQgPSBfdGhpczMuZ2V0SGVpZ2h0KGQudmFsdWUpOwoKICAgICAgICB2YXIgeSA9IF90aGlzMy5nZXRZKGhlaWdodCk7CgogICAgICAgIHJldHVybiB5IC0gKF90aGlzMy5iYXJMYWJlbEhlaWdodCAvIDIgKyBfdGhpczMuYmFyTGFiZWxTcGFjaW5nKSArIDUwOwogICAgICB9KS5hdHRyKCdjbGFzcycsICdiYXItdmFsdWUnKS5hdHRyKCd0ZXh0LWFuY2hvcicsICdtaWRkbGUnKS5hdHRyKCdkb21pbmFudC1iYXNlbGluZScsICdtaWRkbGUnKS5zdHlsZSgnZmlsbCcsIGNvbG9ycy5jb2xvclByaW1hcnkpLnN0eWxlKCdmb250LWZhbWlseScsICdSb2JvdG8gU2xhYicpLnN0eWxlKCdmb250LXNpemUnLCAiMjBweCIpLnRleHQoZnVuY3Rpb24gKGQpIHsKICAgICAgICByZXR1cm4gImRhbWFnZWQiOwogICAgICB9KTsKICAgICAgYmFyTGFiZWxHcm91cHMuYXBwZW5kKCd0ZXh0JykuYXR0cigneCcsIGZ1bmN0aW9uIChkLCBpKSB7CiAgICAgICAgcmV0dXJuIF90aGlzMy5nZXRUZXh0WChpKSAtIDkwOwogICAgICB9KS5hdHRyKCd5JywgZnVuY3Rpb24gKGQpIHsKICAgICAgICB2YXIgaGVpZ2h0ID0gX3RoaXMzLmdldEhlaWdodChkLnZhbHVlKTsKCiAgICAgICAgdmFyIHkgPSBfdGhpczMuZ2V0WShoZWlnaHQpOwoKICAgICAgICByZXR1cm4geSAtIChfdGhpczMuYmFyTGFiZWxIZWlnaHQgLyAyICsgX3RoaXMzLmJhckxhYmVsU3BhY2luZykgKyA3MDsKICAgICAgfSkuYXR0cignY2xhc3MnLCAnYmFyLXZhbHVlJykuYXR0cigndGV4dC1hbmNob3InLCAnbWlkZGxlJykuYXR0cignZG9taW5hbnQtYmFzZWxpbmUnLCAnbWlkZGxlJykuc3R5bGUoJ2ZpbGwnLCBjb2xvcnMuY29sb3JQcmltYXJ5KS5zdHlsZSgnZm9udC1mYW1pbHknLCAnUm9ib3RvIFNsYWInKS5zdHlsZSgnZm9udC1zaXplJywgIjIwcHgiKS50ZXh0KCJpbiAyMDIwIik7CiAgICAgIHZhciB0ZXh0RGltcyA9IEFycmF5LmZyb20odGV4dExhYmVscy5fZ3JvdXBzWzBdKS5tYXAoZnVuY3Rpb24gKHRleHQpIHsKICAgICAgICByZXR1cm4gZDMuc2VsZWN0KHRleHQpLm5vZGUoKS5nZXRCQm94KCk7CiAgICAgIH0pOwogICAgfSwKICAgIGRyYXdYQXhpc0luZGljYXRvcnM6IGZ1bmN0aW9uIGRyYXdYQXhpc0luZGljYXRvcnMob3B0aW9ucykgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHZhciBheGlzID0gb3B0aW9ucy5heGlzLAogICAgICAgICAgdmFsdWVzID0gb3B0aW9ucy52YWx1ZXMsCiAgICAgICAgICBzcGFjZUJldHdlZW5MYWJlbHNBbmRDaGFydCA9IG9wdGlvbnMuc3BhY2VCZXR3ZWVuTGFiZWxzQW5kQ2hhcnQsCiAgICAgICAgICBsYWJlbFN0eWxlID0gb3B0aW9ucy5sYWJlbFN0eWxlOwoKICAgICAgdmFyIGdldFggPSBmdW5jdGlvbiBnZXRYKGkpIHsKICAgICAgICB2YXIgYXcgPSBfdGhpczQuYXcsCiAgICAgICAgICAgIGwgPSBfdGhpczQubDsKICAgICAgICByZXR1cm4gbCArIGF3IC8gKHZhbHVlcy5sZW5ndGggKyAxKSAqIChpICsgMSk7CiAgICAgIH07CgogICAgICB2YXIgeEF4aXNEYXRhID0gdmFsdWVzLm1hcChmdW5jdGlvbiAoZGF0dW0sIGkpIHsKICAgICAgICB2YXIgeSA9IGZ1bmN0aW9uIHkoKSB7CiAgICAgICAgICByZXR1cm4gYXhpcyA9PT0gJ3gtdG9wJyA/IF90aGlzNC50IDogX3RoaXM0LnQgKyBfdGhpczQuYWg7CiAgICAgICAgfTsKCiAgICAgICAgdmFyIHggPSBmdW5jdGlvbiB4KCkgewogICAgICAgICAgcmV0dXJuIGdldFgoaSk7CiAgICAgICAgfTsKCiAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgZGF0dW0pLCB7fSwgewogICAgICAgICAgeDogeCwKICAgICAgICAgIHk6IHksCiAgICAgICAgICB0ZXh0QW5jaG9yOiAnbWlkZGxlJywKICAgICAgICAgIGRvbWluYW50QmFzZWxpbmU6IGF4aXMgPT09ICd4LXRvcCcgPyAndGV4dC1iZWZvcmUtZWRnZScgOiAndGV4dC1hZnRlci1lZGdlJwogICAgICAgIH0pOwogICAgICB9KTsKICAgICAgdmFyIHhBeGlzTGFiZWxzID0gdGhpcy5jYW52YXMuc2VsZWN0QWxsKCd4LWF4aXMtbGFiZWxzIGF4aXMtbGFiZWwnKS5kYXRhKHhBeGlzRGF0YSkuZW50ZXIoKS5hcHBlbmQoJ3RleHQnKS5hdHRyKCd0ZXh0LWFuY2hvcicsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQudGV4dEFuY2hvcjsKICAgICAgfSkuYXR0cigneCcsIGZ1bmN0aW9uIChkLCBpKSB7CiAgICAgICAgcmV0dXJuIF90aGlzNC5nZXRUZXh0WChpKTsKICAgICAgfSkuYXR0cigneScsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQueSgpOwogICAgICB9KS5hdHRyKCdkb21pbmFudC1iYXNlbGluZScsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQuZG9taW5hbnRCYXNlbGluZTsKICAgICAgfSkuc3R5bGUoJ2ZpbGwnLCBjb2xvcnMuY29sb3JQcmltYXJ5KS50ZXh0KGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQubGFiZWw7CiAgICAgIH0pOwoKICAgICAgaWYgKGxhYmVsU3R5bGUpIHsKICAgICAgICB0aGlzLmFwcGx5TWV0aG9kcyh4QXhpc0xhYmVscywgJ3N0eWxlJywgbGFiZWxTdHlsZSk7CiAgICAgIH0KCiAgICAgIHZhciB4QXhpc0xhYmVsRGltcyA9IEFycmF5LmZyb20oeEF4aXNMYWJlbHMuX2dyb3Vwc1swXSkubWFwKGZ1bmN0aW9uIChhKSB7CiAgICAgICAgcmV0dXJuIGEuZ2V0QkJveCgpOwogICAgICB9KTsKICAgICAgdmFyIHhBeGlzTGFiZWxIZWlnaHRzID0geEF4aXNMYWJlbERpbXMubWFwKGZ1bmN0aW9uIChhKSB7CiAgICAgICAgcmV0dXJuIGEuaGVpZ2h0OwogICAgICB9KTsgLy8gY29uc3QgeEF4aXNMYWJlbFdpZHRocyAgPSB4QXhpc0xhYmVsRGltcy5tYXAoIGEgPT4gYS53aWR0aCApOwoKICAgICAgdmFyIGJpZ2dlc3RYQXhpc0xhYmVsID0gTWF0aC5tYXguYXBwbHkoTWF0aCwgX3RvQ29uc3VtYWJsZUFycmF5KHhBeGlzTGFiZWxIZWlnaHRzKSk7CgogICAgICB2YXIgZGltcyA9IGZ1bmN0aW9uICgpIHsKICAgICAgICBpZiAoYXhpcyA9PT0gJ3ktdG9wJykgewogICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgdDogYmlnZ2VzdFhBeGlzTGFiZWwgKyBzcGFjZUJldHdlZW5MYWJlbHNBbmRDaGFydAogICAgICAgICAgfTsKICAgICAgICB9CgogICAgICAgIHJldHVybiB7CiAgICAgICAgICBiOiBiaWdnZXN0WEF4aXNMYWJlbCArIHNwYWNlQmV0d2VlbkxhYmVsc0FuZENoYXJ0CiAgICAgICAgfTsKICAgICAgfSgpOwoKICAgICAgdGhpcy51cGRhdGVEaW1zKGRpbXMpOwogICAgICB0aGlzLnJlYWxpZ25BeGlzTGFiZWxzKCk7IC8vID8gY2VudGVyIHRleHRzIGFzIG5lY2Vzc2FyeQogICAgICAvLyBjb25zdCB0b3RhbFRleHRTcGFjZSA9IHhBeGlzTGFiZWxXaWR0aHMucmVkdWNlKCAoIHN1bSwgdyApID0+IHN1bSArIHcsIDAgKTsKICAgICAgLy8gY29uc3QgbGVmdE92ZXJTcGFjZSAgPSB0aGlzLmF3IC0gdG90YWxUZXh0U3BhY2U7CiAgICAgIC8vIGNvbnN0IHNwYWNlQXJvdW5kICAgID0gKCBsZWZ0T3ZlclNwYWNlIC8gKCB2YWx1ZXMubGVuZ3RoICsgMSApICk7CgogICAgICByZXR1cm4geEF4aXNMYWJlbERpbXM7CiAgICB9LAogICAgZ2V0WDogZnVuY3Rpb24gZ2V0WChpKSB7CiAgICAgIHZhciBsID0gdGhpcy5sLAogICAgICAgICAgYmFyV2lkdGggPSB0aGlzLmJhcldpZHRoLAogICAgICAgICAgYmFyU3BhY2luZyA9IHRoaXMuYmFyU3BhY2luZzsKICAgICAgdmFyIHggPSBsICsgYmFyV2lkdGggKiBpICsgYmFyU3BhY2luZyAqIGkgKyBiYXJTcGFjaW5nIC8gMjsKICAgICAgcmV0dXJuIHg7CiAgICB9LAogICAgZ2V0WTogZnVuY3Rpb24gZ2V0WShoZWlnaHQpIHsKICAgICAgdmFyIGFoID0gdGhpcy5haCwKICAgICAgICAgIHQgPSB0aGlzLnQ7CiAgICAgIHJldHVybiBhaCArIHQgLSBoZWlnaHQ7CiAgICB9LAogICAgZ2V0VGV4dFg6IGZ1bmN0aW9uIGdldFRleHRYKGkpIHsKICAgICAgdmFyIGwgPSB0aGlzLmwsCiAgICAgICAgICBiYXJXaWR0aCA9IHRoaXMuYmFyV2lkdGgsCiAgICAgICAgICBiYXJTcGFjaW5nID0gdGhpcy5iYXJTcGFjaW5nOwogICAgICByZXR1cm4gbCArIGJhcldpZHRoICogaSArIGJhclNwYWNpbmcgKiBpICsgYmFyV2lkdGggLyAyICsgYmFyU3BhY2luZyAvIDI7CiAgICB9LAogICAgZ2V0SGVpZ2h0OiBmdW5jdGlvbiBnZXRIZWlnaHQodmFsdWUpIHsKICAgICAgdmFyIHZhbHVlcyA9IHRoaXMuY2hhcnQuZGF0YS5tYXAoZnVuY3Rpb24gKGVudHJ5KSB7CiAgICAgICAgcmV0dXJuIGVudHJ5LnZhbHVlOwogICAgICB9KTsKCiAgICAgIHZhciBfdGhpcyRnZXREYXRhUmFuZ2UyID0gdGhpcy5nZXREYXRhUmFuZ2UodmFsdWVzLCBmYWxzZSksCiAgICAgICAgICBlbmQgPSBfdGhpcyRnZXREYXRhUmFuZ2UyLmVuZDsgLy8gKyB0aGlzIGFzc3VtZXMgdGhhdCB0aGUgYm90dG9tIG9mIHRoZSByYW5nZQogICAgICAvLyArIGlzIGFsd2F5cyB6ZXJvCgoKICAgICAgcmV0dXJuIHZhbHVlIC8gZW5kICogdGhpcy5haDsKICAgIH0KICB9Cn07"},{"version":3,"sources":["InsectBarChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang='pug'>\n.chart\n\tsvg(ref='svg')\n</template>\n\n<script>\n/* eslint-disable*/\nimport formatNumber from '@/lib/utils/formatNumber';\nimport colors from '@/assets/js/colors';\nimport * as d3 from 'd3';\nimport BaseChart from './BaseChart';\nimport ChartLegend from '../ChartLegend';\n\nexport default {\n\tname    : 'quality-bar-chart',\n\textends : BaseChart,\n\tprops   : {\n\t\tchart : {\n\t\t\ttype    : Object,\n\t\t\tdefault : () => ( {\n\t\t\t\tlabel     : 'Pounds Produced in Fake Data',\n\t\t\t\tupdatedAt : new Date(),\n\t\t\t\tdata      : [{\n\t\t\t\t\tvalue : 220,\n\t\t\t\t\tlabel : 'All Fields',\n\t\t\t\t\tcolor : '#E5BF11',\n\t\t\t\t}],\n\t\t\t} ),\n\t\t},\n\t\toptions : {\n\t\t\ttype    : Object,\n\t\t\tdefault : () => ( {\n\t\t\t\thasBarLabels : true\n\t\t\t} )\n\t\t}\n\t},\n\tdata : () => ( {\n\t\tbarLabelHeight  : 30,\n\t\tbarLabelSpacing : 5\n\t} ),\n\tcomponents : {\n\t\tChartLegend\n\t},\n\n\tcomputed : {\n\t\tbarWidth() {\n\t\t\tconst { aw } = this;\n\t\t\treturn 50;\n\t\t\t// return Math.min( aw / this.chart.data.length, 30 );\n\t\t},\n\t\tbarSpacing() {\n\t\t\tconst { barWidth, data, aw } = this;\n\t\t\t// console.log( barWidth );\n\t\t\treturn ( aw - ( barWidth * this.chart.data.length ) ) / this.chart.data.length;\n\t\t},\n\t\tlabelTextSize() {\n\t\t\treturn this.barWidth * 0.75;\n\t\t}\n\t},\n\tmounted() {\n\t\t// console.log('mounted BarChart');\n\t\tthis.init( this.$refs.svg );\n\t},\n\tmethods : {\n\t\tdraw() {\n\t\t\tthis.updateDims( {\n\t\t\t\tl : 5,\n\t\t\t\tr : 5,\n\t\t\t\tt : 30\n\t\t\t} );\n\t\t\tconst { values } = this.chart.data.map( entry => entry.label );\n\t\t\tconst yValues = this.chart.data.map( entry => entry.value );\n\t\t\t// const sum = Object.keys( values ).reduce( ( total, key ) => total + values[key], 0 );\n\t\t\tconst sum = this.getDataRange( yValues, false ).end;\n\t\t\t// const yValues = this.chart.data[0].map( datum => datum.value );\n\t\t\tconst range   = { start : 0, end : sum };\n\n\t\t\tif ( this.hasBarLabels ) {\n\t\t\t\tthis.updateDims( {\n\t\t\t\t\tt : this.t + this.barLabelHeight + this.barLabelSpacing\n\t\t\t\t} );\n\t\t\t}\n\t\t\t// draw y-axis labels\n\n\t\t\tconst yAxisData = this.drawAxisIndicators( {\n\t\t\t\taxis           : 'y-right',\n\t\t\t\ttransformLabel : text => formatNumber( text ),\n\t\t\t\tlines          : {\n\t\t\t\t\tnumberOfIndicators         : 6,\n\t\t\t\t\tspaceBetweenLabelsAndLines : 10,\n\t\t\t\t},\n\t\t\t\tcolor : colors.colorPrimary,\n\t\t\t\tdifferentFirstAndLastLabels: false,\n\t\t\t\trange,\n\t\t\t} );\n\n\t\t\t// console.log( yAxisData );\n\t\t\t// draw x-axis labels\n\t\t\tconst xAxisData = this.drawAxisIndicators( {\n\t\t\t\taxis                       : 'x-bottom',\n\t\t\t\tvalues                     : this.chart.data,\n\t\t\t\tspaceBetweenLabelsAndChart : 10,\n\t\t\t\tlabelStyle                 : [\n\t\t\t\t\t['font-size', '14px'],\n\t\t\t\t\t['font-weight', '700'],\n\t\t\t\t\t['font-family', '\"Manjari\", sans-serif'],\n\t\t\t\t],\n\t\t\t} );\n\t\t\t// Compute the position and size of the bars\n\t\t\tconst barData   = this.newComputeBarData( );\n\t\t\tconst barGroups = this.newDrawBars( barData );\n\n\t\t\tthis.drawBarLabels( barGroups );\n\n\n\t\t},\n\n\t\tnewComputeBarData( ) {\n\t\t\tconst values = this.chart.data.map( entry => entry.value );\n\t\t\tconst { end } = this.getDataRange( values, false );\n\t\t\tconst sum = this.chart.data.reduce( ( total, entry ) => total + entry.value, 0 );\n\t\t\treturn this.chart.data.map( ( entry, i ) => {\n\t\t\t\tconst { value } = entry;\n\t\t\t\tconst height = ( value / end ) * this.ah;\n\t\t\t\tconst y = this.t + ( this.ah - height );\n\t\t\t\treturn {\n\t\t\t\t\twidth : this.barWidth,\n\t\t\t\t\tcolor : entry.color,\n\t\t\t\t\tx     : this.getX( i ),\n\t\t\t\t\t// x     : this.l + xDims[i].x,\n\t\t\t\t\tlabel : entry.label,\n\t\t\t\t\tvalue : entry.value,\n\t\t\t\t\ty,\n\t\t\t\t\theight\n\t\t\t\t};\n\t\t\t} );\n\t\t},\n\t\tnewDrawXaxis( barGroups ) {\n\t\t\tconst xAxisLabels = barGroups\n\t\t\t\t.append( 'text' )\n\t\t\t\t.attr( 'class', 'x-axis-labels' )\n\t\t\t\t.attr( 'x', ( d, i ) => this.getTextX( i ) )\n\t\t\t\t.attr( 'y', this.t + this.ah )\n\t\t\t\t.attr( 'text-anchor', 'middle' )\n\t\t\t\t.attr( 'dominant-baseline', 'start' )\n\t\t\t\t.style( 'font-size', '12px' )\n\t\t\t\t.text( d => d.label );\n\t\t\tthis.changeWithMode( {\n\t\t\t\tnodes   : xAxisLabels,\n\t\t\t\toptions : {\n\t\t\t\t\tday : {\n\t\t\t\t\t\tstyle : [\n\t\t\t\t\t\t\t['fill', colors.grey],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t\tnight : {\n\t\t\t\t\t\tstyle : [\n\t\t\t\t\t\t\t['fill', colors.white],\n\t\t\t\t\t\t],\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t} );\n\t\t\tconst barLabelNodes = barGroups.selectAll( '.x-axis-labels' );\n\t\t\tconst barLabelWidths = Array.from( barLabelNodes._groups[0] ).map( a => a.getBBox().height );\n\t\t\tconst biggestBarLabel = Math.max( ...barLabelWidths );\n\t\t\tconst spaceBetweenBarAndXAxis = 2;\n\t\t\tthis.updateDims( {\n\t\t\t\tb : biggestBarLabel + spaceBetweenBarAndXAxis\n\t\t\t} );\n\t\t\treturn xAxisLabels;\n\t\t},\n\t\tnewDrawBars( barData ) {\n\t\t\tconst barGroups = this.canvas.selectAll( `bars-${this.id}` )\n\t\t\t\t.data( barData )\n\t\t\t\t.enter()\n\t\t\t\t.append( 'g' );\n\n\t\t\tbarGroups\n\t\t\t\t.append( 'rect' )\n\t\t\t\t.attr( 'x', d => d.x )\n\t\t\t\t.attr( 'y', d => d.y )\n\t\t\t\t// .attr( 'fill', d => d.color )\n\t\t\t\t.attr( 'fill', d => d.color )\n\t\t\t\t.attr( 'height', d => d.height )\n\t\t\t\t.attr( 'width', d => d.width )\n\t\t\t\t.attr( 'stroke', d => d.color )\n\t\t\t\t.attr( 'opacity', 0.8 )\n\t\t\t\t.attr( 'stroke-width', d => '2' )\n\t\t\t\t.attr('rx', '0')\n\t\t\t\t.attr( 'class', `bar-${this.id} translate-${this.id}` );\n\n\t\t\tconst roundToNearestMultipleOfEight = num => Math.ceil( Math.ceil( num ) / 8 ) * 8;\n\t\t\treturn barGroups;\n\t\t},\n\n\n\t\tdrawBarLabels( barGroups ) {\n\t\t\tconst barLabelGroups = barGroups\n\t\t\t\t.append( 'g' );\n\t\t\tconst textLabels = barLabelGroups.append( 'text' )\n\t\t\t\t.attr( 'x', ( d, i ) => this.getTextX( i )-90 )\n\t\t\t\t.attr( 'y', ( d ) => {\n\t\t\t\t\tconst height = this.getHeight( d.value );\n\t\t\t\t\tconst y = this.getY( height );\n\t\t\t\t\treturn y - ( ( this.barLabelHeight / 2 ) + this.barLabelSpacing );\n\t\t\t\t} )\n\t\t\t\t.attr( 'class', 'bar-value' )\n\t\t\t\t.attr( 'text-anchor', 'middle' )\n\t\t\t\t.attr( 'dominant-baseline', 'middle' )\n\t\t\t\t.style( 'fill', d => d.color )\n\t\t\t\t.style( 'font-weight', 'bold' )\n\t\t\t\t.style( 'font-family', 'Roboto Slab' )\n\t\t\t\t.style( 'font-size', `${this.labelTextSize}px` )\n\t\t\t\t.text( d => formatNumber(d.value) );\n\n\t\t\tbarLabelGroups.append( 'text' )\n\t\t\t\t.attr( 'x', ( d, i ) => this.getTextX( i )-90 )\n\t\t\t\t.attr( 'y', ( d ) => {\n\t\t\t\t\tconst height = this.getHeight( d.value );\n\t\t\t\t\tconst y = this.getY( height );\n\t\t\t\t\treturn y - ( ( this.barLabelHeight / 2 ) + this.barLabelSpacing )+30;\n\t\t\t\t} )\n\t\t\t\t.attr( 'class', 'bar-value' )\n\t\t\t\t.attr( 'text-anchor', 'middle' )\n\t\t\t\t.attr( 'dominant-baseline', 'middle' )\n\t\t\t\t.style( 'fill', colors.colorPrimary )\n\t\t\t\t.style( 'font-family', 'Roboto Slab' )\n\t\t\t\t.style( 'font-size', `20px` )\n\t\t\t\t.text( d => \"Pounds\" );\n\n\t\t\tbarLabelGroups.append( 'text' )\n\t\t\t\t.attr( 'x', ( d, i ) => this.getTextX( i )-90 )\n\t\t\t\t.attr( 'y', ( d ) => {\n\t\t\t\t\tconst height = this.getHeight( d.value );\n\t\t\t\t\tconst y = this.getY( height );\n\t\t\t\t\treturn y - ( ( this.barLabelHeight / 2 ) + this.barLabelSpacing )+50;\n\t\t\t\t} )\n\t\t\t\t.attr( 'class', 'bar-value' )\n\t\t\t\t.attr( 'text-anchor', 'middle' )\n\t\t\t\t.attr( 'dominant-baseline', 'middle' )\n\t\t\t\t.style( 'fill', colors.colorPrimary )\n\t\t\t\t.style( 'font-family', 'Roboto Slab' )\n\t\t\t\t.style( 'font-size', `20px` )\n\t\t\t\t.text( d => \"damaged\" );\n\n\t\t\tbarLabelGroups.append( 'text' )\n\t\t\t\t.attr( 'x', ( d, i ) => this.getTextX( i )-90 )\n\t\t\t\t.attr( 'y', ( d ) => {\n\t\t\t\t\tconst height = this.getHeight( d.value );\n\t\t\t\t\tconst y = this.getY( height );\n\t\t\t\t\treturn y - ( ( this.barLabelHeight / 2 ) + this.barLabelSpacing )+70;\n\t\t\t\t} )\n\t\t\t\t.attr( 'class', 'bar-value' )\n\t\t\t\t.attr( 'text-anchor', 'middle' )\n\t\t\t\t.attr( 'dominant-baseline', 'middle' )\n\t\t\t\t.style( 'fill', colors.colorPrimary )\n\t\t\t\t.style( 'font-family', 'Roboto Slab' )\n\t\t\t\t.style( 'font-size', `20px` )\n\t\t\t\t.text( \"in 2020\" );\n\n\n\n\n\t\t\tconst textDims = Array.from(\n\t\t\t\ttextLabels._groups[0]\n\t\t\t).map(\n\t\t\t\ttext => d3.select( text )\n\t\t\t\t\t.node()\n\t\t\t\t\t.getBBox()\n\t\t\t);\n\n\t\t},\n\t\tdrawXAxisIndicators( options ) {\n\t\t\tconst {\n\t\t\t\taxis,\n\t\t\t\tvalues,\n\t\t\t\tspaceBetweenLabelsAndChart,\n\t\t\t\tlabelStyle,\n\t\t\t} = options;\n\n\t\t\tconst getX = ( i ) => {\n\t\t\t\tconst { aw, l } = this;\n\n\t\t\t\treturn l + ( ( aw / ( values.length + 1 ) ) * ( i + 1 ) );\n\t\t\t};\n\n\t\t\tconst xAxisData = values.map( ( datum, i ) => {\n\n\t\t\t\tconst y = () => ( ( axis === 'x-top' ) ? this.t : this.t + this.ah );\n\t\t\t\tconst x = () => getX( i );\n\t\t\t\treturn {\n\t\t\t\t\t...datum,\n\t\t\t\t\tx,\n\t\t\t\t\ty,\n\t\t\t\t\ttextAnchor       : 'middle',\n\t\t\t\t\tdominantBaseline : ( axis === 'x-top' ) ? 'text-before-edge' : 'text-after-edge',\n\t\t\t\t};\n\t\t\t} );\n\n\t\t\tconst xAxisLabels = this.canvas\n\t\t\t\t.selectAll( 'x-axis-labels axis-label' )\n\t\t\t\t.data( xAxisData )\n\t\t\t\t.enter()\n\t\t\t\t.append( 'text' )\n\t\t\t\t.attr( 'text-anchor', d => d.textAnchor )\n\t\t\t\t.attr( 'x', ( d, i ) => this.getTextX( i ) )\n\t\t\t\t.attr( 'y', d => d.y() )\n\t\t\t\t.attr( 'dominant-baseline', d => d.dominantBaseline )\n\t\t\t\t.style( 'fill', colors.colorPrimary )\n\t\t\t\t.text( d => d.label );\n\n\t\t\tif ( labelStyle ) {\n\t\t\t\tthis.applyMethods( xAxisLabels, 'style', labelStyle );\n\t\t\t}\n\n\t\t\tconst xAxisLabelDims    = Array.from( xAxisLabels._groups[0] ).map( a => a.getBBox() );\n\t\t\tconst xAxisLabelHeights = xAxisLabelDims.map( a => a.height );\n\t\t\t// const xAxisLabelWidths  = xAxisLabelDims.map( a => a.width );\n\t\t\tconst biggestXAxisLabel = Math.max( ...xAxisLabelHeights );\n\n\t\t\tconst dims = ( () => {\n\t\t\t\tif ( axis === 'y-top' ) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\tt : biggestXAxisLabel + spaceBetweenLabelsAndChart,\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tb : biggestXAxisLabel + spaceBetweenLabelsAndChart,\n\t\t\t\t};\n\t\t\t} )();\n\n\t\t\tthis.updateDims( dims );\n\t\t\tthis.realignAxisLabels();\n\n\t\t\t// ? center texts as necessary\n\t\t\t// const totalTextSpace = xAxisLabelWidths.reduce( ( sum, w ) => sum + w, 0 );\n\t\t\t// const leftOverSpace  = this.aw - totalTextSpace;\n\t\t\t// const spaceAround    = ( leftOverSpace / ( values.length + 1 ) );\n\n\t\t\treturn xAxisLabelDims;\n\n\t\t},\n\t\tgetX( i ) {\n\t\t\tconst {\n\t\t\t\tl,\n\t\t\t\tbarWidth,\n\t\t\t\tbarSpacing,\n\t\t\t} = this;\n\t\t\tconst x = l + ( barWidth * i ) + ( barSpacing * i ) + ( barSpacing / 2 );\n\t\t\treturn x;\n\t\t},\n\t\tgetY( height ) {\n\t\t\tconst { ah, t } = this;\n\t\t\treturn ah + t - height;\n\t\t},\n\t\tgetTextX( i ) {\n\t\t\tconst {\n\t\t\t\tl,\n\t\t\t\tbarWidth,\n\t\t\t\tbarSpacing\n\t\t\t} = this;\n\t\t\treturn ( l + ( barWidth * i ) + ( barSpacing * i ) + ( barWidth / 2 ) ) + ( barSpacing / 2 );\n\t\t},\n\t\tgetHeight( value ) {\n\t\t\tconst values = this.chart.data.map( entry => entry.value );\n\t\t\tconst { end } = this.getDataRange( values, false );\n\n\t\t\t// + this assumes that the bottom of the range\n\t\t\t// + is always zero\n\t\t\treturn ( value / end ) * this.ah;\n\t\t}\n\n\t}\n};\n</script>\n\n<style lang='scss'>\n\t.chart{\n\t\theight: 50%;\n\t\twidth: 100%;\n\t\tsvg {\n\t\t// flex: 2 2 0\n\t\tposition: relative;\n\t\theight: 100%;\n\t\twidth: 100%;\n\t\tborder: 0px;\n\t\t}\n\t}\n\t// .chart{\n\t// \tdisplay: flex;\n\t// \talign-items: stretch;\n\t// \twidth: 100%;\n\t// \theight: 200px;\n\t// \tpadding:0;\n\t// \tsvg {\n\t// \t// flex: 2 2 0\n\t// \tposition: relative;\n\t// \theight: 100%;\n\t// \twidth: 100%;\n\t// \tborder: 0px;;\n\t// \t}\n\t// }\n\n</style>\n"],"sourceRoot":"src/components/charts"}]}
{"remainingRequest":"/Users/brianphan/jets/kf-grower-portal/node_modules/babel-loader/lib/index.js!/Users/brianphan/jets/kf-grower-portal/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/brianphan/jets/kf-grower-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/brianphan/jets/kf-grower-portal/src/components/charts/LineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/brianphan/jets/kf-grower-portal/src/components/charts/LineChart.vue","mtime":1617734622980},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/brianphan/jets/kf-grower-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMvYnJpYW5waGFuL2pldHMva2YtZ3Jvd2VyLXBvcnRhbC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwppbXBvcnQgX3NsaWNlZFRvQXJyYXkgZnJvbSAiL1VzZXJzL2JyaWFucGhhbi9qZXRzL2tmLWdyb3dlci1wb3J0YWwvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3NsaWNlZFRvQXJyYXkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5yZWR1Y2UuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBmb3JtYXROdW1iZXIgZnJvbSAnQC9saWIvdXRpbHMvZm9ybWF0TnVtYmVyJzsKaW1wb3J0IHsgZm9ybWF0IH0gZnJvbSAnZGF0ZS1mbnMnOwppbXBvcnQgY29sb3JzIGZyb20gJ0AvYXNzZXRzL2pzL2NvbG9ycyc7CmltcG9ydCBCYXNlQ2hhcnQgZnJvbSAnLi9CYXNlQ2hhcnQnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ2xpbmUtY2hhcnQnLAogIGV4dGVuZHM6IEJhc2VDaGFydCwKICBwcm9wczogewogICAgY2hhcnQ6IHsKICAgICAgdHlwZTogT2JqZWN0CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsvLyBub3RoaW5nIHlldAogICAgfTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICB0b3RhbDogZnVuY3Rpb24gdG90YWwoKSB7CiAgICAgIHZhciBkYXRhID0gdGhpcy5jaGFydC5kYXRhOwogICAgICB2YXIgdG90YWwgPSBkYXRhLnJlZHVjZShmdW5jdGlvbiAoc3VtLCBpdGVtKSB7CiAgICAgICAgcmV0dXJuIHN1bSArIGl0ZW0udmFsdWU7CiAgICAgIH0sIDApOwogICAgICBjb25zb2xlLmxvZyh0b3RhbCk7CiAgICAgIHJldHVybiBmb3JtYXROdW1iZXIodG90YWwpOwogICAgfSwKICAgIGxhc3RVcGRhdGVkOiBmdW5jdGlvbiBsYXN0VXBkYXRlZCgpIHsKICAgICAgdmFyIHVwZGF0ZWRBdCA9IHRoaXMuY2hhcnQudXBkYXRlZEF0OwogICAgICByZXR1cm4gZm9ybWF0KG5ldyBEYXRlKHVwZGF0ZWRBdCksICdMTExMIGRvLCB5eXl5Jyk7CiAgICB9CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5pbml0KHRoaXMuJHJlZnMuc3ZnKTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGRyYXc6IGZ1bmN0aW9uIGRyYXcoKSB7CiAgICAgIC8vIGdldCBkYXRhIHJhbmdlCiAgICAgIHZhciB5VmFsdWVzID0gdGhpcy5jaGFydC5kYXRhLm1hcChmdW5jdGlvbiAoZGF0dW0pIHsKICAgICAgICByZXR1cm4gZGF0dW0udmFsdWU7CiAgICAgIH0pOwogICAgICB2YXIgcmFuZ2UgPSB0aGlzLmdldERhdGFSYW5nZSh5VmFsdWVzKTsKICAgICAgY29uc29sZS5sb2cocmFuZ2UpOyAvLyBkcmF3IHktYXhpcyBsYWJlbHMKCiAgICAgIHRoaXMuZHJhd0F4aXNJbmRpY2F0b3JzKHsKICAgICAgICBheGlzOiAneS1yaWdodCcsCiAgICAgICAgdHJhbnNmb3JtTGFiZWw6IGZ1bmN0aW9uIHRyYW5zZm9ybUxhYmVsKHRleHQpIHsKICAgICAgICAgIHJldHVybiBmb3JtYXROdW1iZXIodGV4dCk7CiAgICAgICAgfSwKICAgICAgICBsaW5lczogewogICAgICAgICAgbnVtYmVyT2ZJbmRpY2F0b3JzOiA1LAogICAgICAgICAgc3BhY2VCZXR3ZWVuTGFiZWxzQW5kTGluZXM6IDEwCiAgICAgICAgfSwKICAgICAgICBjb2xvcjogY29sb3JzLmNvbG9yUHJpbWFyeSwKICAgICAgICByYW5nZTogcmFuZ2UKICAgICAgfSk7IC8vIGRyYXcgeC1heGlzIGxhYmVscwoKICAgICAgdmFyIHhBeGlzRGF0YSA9IHRoaXMuZHJhd0F4aXNJbmRpY2F0b3JzKHsKICAgICAgICBheGlzOiAneC1ib3R0b20nLAogICAgICAgIHZhbHVlczogdGhpcy5jaGFydC5kYXRhLAogICAgICAgIHNwYWNlQmV0d2VlbkxhYmVsc0FuZENoYXJ0OiAxMCwKICAgICAgICBsYWJlbFN0eWxlOiBbWydmb250LXNpemUnLCAnMTRweCddLCBbJ2ZvbnQtd2VpZ2h0JywgJzcwMCddLCBbJ2ZvbnQtZmFtaWx5JywgJyJNYW5qYXJpIiwgc2Fucy1zZXJpZiddXQogICAgICB9KTsgLy8gZHJhdyBsaW5lIGFuZCBzaGFkZWQKICAgICAgLy8gYXJlYSB1bmRlciBjaGFydAoKICAgICAgdGhpcy5kcmF3U2hhZGVkTGluZSh4QXhpc0RhdGEsIHJhbmdlKTsKICAgICAgY29uc29sZS5sb2coeEF4aXNEYXRhKTsgLy8gZHJhdyBwb2ludHMKCiAgICAgIHRoaXMuZHJhd1BvaW50cyh4QXhpc0RhdGEsIHJhbmdlKTsKICAgIH0sCiAgICBkcmF3U2hhZGVkTGluZTogZnVuY3Rpb24gZHJhd1NoYWRlZExpbmUoeEF4aXNEYXRhLCByYW5nZSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgaWYgKHhBeGlzRGF0YS5sZW5ndGggPCAyKSB7CiAgICAgICAgcmV0dXJuOwogICAgICB9CgogICAgICB2YXIgX3hBeGlzRGF0YSRzbGljZSRtYXAgPSB4QXhpc0RhdGEuc2xpY2UoMCwgMikubWFwKGZ1bmN0aW9uIChwb2ludCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICB4OiBwb2ludC54LAogICAgICAgICAgeTogZnVuY3Rpb24geSgpIHsKICAgICAgICAgICAgcmV0dXJuIF90aGlzLmdldFlWYWx1ZShwb2ludC52YWx1ZSwgcmFuZ2UpOwogICAgICAgICAgfQogICAgICAgIH07CiAgICAgIH0pLAogICAgICAgICAgX3hBeGlzRGF0YSRzbGljZSRtYXAyID0gX3NsaWNlZFRvQXJyYXkoX3hBeGlzRGF0YSRzbGljZSRtYXAsIDIpLAogICAgICAgICAgcG9pbnRPbmUgPSBfeEF4aXNEYXRhJHNsaWNlJG1hcDJbMF0sCiAgICAgICAgICBwb2ludFR3byA9IF94QXhpc0RhdGEkc2xpY2UkbWFwMlsxXTsKCiAgICAgIHZhciBmT2ZGaXJzdExpbmUgPSB0aGlzLmdldExpbmVhckZ1bmN0aW9uRnJvbVR3b1BvaW50cyhwb2ludE9uZSwgcG9pbnRUd28pOwoKICAgICAgdmFyIF94QXhpc0RhdGEkc2xpY2UkbWFwMyA9IHhBeGlzRGF0YS5zbGljZSh4QXhpc0RhdGEubGVuZ3RoIC0gMiwgeEF4aXNEYXRhLmxlbmd0aCkubWFwKGZ1bmN0aW9uIChwb2ludCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICB4OiBwb2ludC54LAogICAgICAgICAgeTogZnVuY3Rpb24geSgpIHsKICAgICAgICAgICAgcmV0dXJuIF90aGlzLmdldFlWYWx1ZShwb2ludC52YWx1ZSwgcmFuZ2UpOwogICAgICAgICAgfQogICAgICAgIH07CiAgICAgIH0pLAogICAgICAgICAgX3hBeGlzRGF0YSRzbGljZSRtYXA0ID0gX3NsaWNlZFRvQXJyYXkoX3hBeGlzRGF0YSRzbGljZSRtYXAzLCAyKSwKICAgICAgICAgIHNlY29uZExhc3RQb2ludCA9IF94QXhpc0RhdGEkc2xpY2UkbWFwNFswXSwKICAgICAgICAgIGxhc3RQb2ludCA9IF94QXhpc0RhdGEkc2xpY2UkbWFwNFsxXTsKCiAgICAgIHZhciBmT2ZTZWNvbmRMaW5lID0gdGhpcy5nZXRMaW5lYXJGdW5jdGlvbkZyb21Ud29Qb2ludHMoc2Vjb25kTGFzdFBvaW50LCBsYXN0UG9pbnQpOwogICAgICB2YXIgbGluZVBvaW50cyA9IHhBeGlzRGF0YS5tYXAoZnVuY3Rpb24gKGRhdHVtLCBpKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHk6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgaWYgKGkgPT09IDApIHsKICAgICAgICAgICAgICByZXR1cm4gZk9mRmlyc3RMaW5lKF90aGlzLmwpOwogICAgICAgICAgICB9CgogICAgICAgICAgICBpZiAoaSA9PT0geEF4aXNEYXRhLmxlbmd0aCAtIDEpIHsKICAgICAgICAgICAgICByZXR1cm4gZk9mU2Vjb25kTGluZShfdGhpcy5sICsgX3RoaXMuYXcpOwogICAgICAgICAgICB9CgogICAgICAgICAgICByZXR1cm4gX3RoaXMuZ2V0WVZhbHVlKGRhdHVtLnZhbHVlLCByYW5nZSk7CiAgICAgICAgICB9KCksCiAgICAgICAgICB4OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGlmIChpID09PSAwKSB7CiAgICAgICAgICAgICAgcmV0dXJuIF90aGlzLmw7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChpID09PSB4QXhpc0RhdGEubGVuZ3RoIC0gMSkgewogICAgICAgICAgICAgIHJldHVybiBfdGhpcy5sICsgX3RoaXMuYXc7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHJldHVybiBkYXR1bS54KCk7CiAgICAgICAgICB9KCkKICAgICAgICB9OwogICAgICB9KTsKICAgICAgdmFyIHN0YXJ0UG9pbnQgPSB7CiAgICAgICAgeDogdGhpcy5sLAogICAgICAgIHk6IHRoaXMudCArIHRoaXMuYWgKICAgICAgfTsKICAgICAgdmFyIGVuZFBvaW50ID0gewogICAgICAgIHg6IHRoaXMubCArIHRoaXMuYXcsCiAgICAgICAgeTogdGhpcy50ICsgdGhpcy5haAogICAgICB9OwogICAgICB2YXIgcG9pbnRzID0gW3N0YXJ0UG9pbnRdLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkobGluZVBvaW50cyksIFtlbmRQb2ludF0pOwogICAgICB0aGlzLmNhbnZhcy5hcHBlbmQoJ3BhdGgnKS5hdHRyKCdkJywgdGhpcy5wYXRoRnJvbVBvaW50cyhwb2ludHMpKS5zdHlsZSgnZmlsbCcsICJ1cmwoI2dyYWRpZW50LSIuY29uY2F0KHRoaXMuaWQsICIpIikpOyAvLyBsb29rIGluIG1hcmsgdXAKICAgIH0sCiAgICBkcmF3UG9pbnRzOiBmdW5jdGlvbiBkcmF3UG9pbnRzKHhBeGlzRGF0YSwgcmFuZ2UpIHsKICAgICAgdmFyIF90aGlzMiA9IHRoaXM7CgogICAgICB2YXIgbGluZVBvaW50cyA9IHhBeGlzRGF0YS5tYXAoZnVuY3Rpb24gKGRhdHVtKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHg6IGRhdHVtLngoKSwKICAgICAgICAgIHk6IF90aGlzMi5nZXRZVmFsdWUoZGF0dW0udmFsdWUsIHJhbmdlKQogICAgICAgIH07CiAgICAgIH0pOwogICAgICB0aGlzLmNhbnZhcy5hcHBlbmQoJ3BhdGgnKS5hdHRyKCdkJywgdGhpcy5wYXRoRnJvbVBvaW50cyhsaW5lUG9pbnRzLCBmYWxzZSkpLnN0eWxlKCdzdHJva2Utd2lkdGgnLCAnNHB4Jykuc3R5bGUoJ3N0cm9rZScsIGNvbG9ycy5jb2xvckFjY2VudCkuc3R5bGUoJ2ZpbGwnLCAndHJhbnNwYXJlbnQnKTsKICAgICAgdGhpcy5jYW52YXMuc2VsZWN0QWxsKCcucG9pbnRzJykuZGF0YSh4QXhpc0RhdGEpLmVudGVyKCkuYXBwZW5kKCdjaXJjbGUnKS5hdHRyKCdjeCcsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIGQueCgpOwogICAgICB9KS5hdHRyKCdjeScsIGZ1bmN0aW9uIChkKSB7CiAgICAgICAgcmV0dXJuIF90aGlzMi5nZXRZVmFsdWUoZC52YWx1ZSwgcmFuZ2UpOwogICAgICB9KS5hdHRyKCdyJywgJzUnKS5zdHlsZSgnc3Ryb2tlLXdpZHRoJywgJzRweCcpLnN0eWxlKCdzdHJva2UnLCBmdW5jdGlvbiAoZCkgewogICAgICAgIHJldHVybiBkLmNvbG9yOwogICAgICB9KS5zdHlsZSgnZmlsbCcsIGNvbG9ycy5iZ0NvbG9yKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["LineChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template lang='pug'>\n.line-chart(:id='id')\n\taside\n\t\tlegend\n\t\t\th1 {{ total }}\n\t\t\th2 {{ chart.label }}\n\t\tfooter\n\t\t\tp\n\t\t\t\tspan Last updated\n\t\t\t\tspan {{ lastUpdated }}\n\t//- can now be found by\n\t//- using this.$refs.svg\n\tsvg(ref='svg')\n\t\tdefs\n\t\t\tlinearGradient(:id='`gradient-${id}`' :x1=\"l\" :y1=\"t\" :x2=\"l + aw\" :y2=\"t\" gradientUnits=\"userSpaceOnUse\")\n\t\t\t\tstop(stop-color=\"#EED667\" stop-opacity=\"0\")\n\t\t\t\tstop(offset=\"0.128101\" stop-color=\"#EED667\" stop-opacity=\"0.19\")\n\t\t\t\tstop(offset=\"0.8698\" stop-color=\"#EED667\" stop-opacity=\"0.19\")\n\t\t\t\tstop(offset=\"1\" stop-color=\"#EED667\" stop-opacity=\"0\")\n</template>\n\n<script>\nimport formatNumber from '@/lib/utils/formatNumber';\nimport { format } from 'date-fns';\nimport colors from '@/assets/js/colors';\nimport BaseChart from './BaseChart';\n\nexport default {\n\tname : 'line-chart',\n\n\textends : BaseChart,\n\n\tprops : {\n\t\tchart : {\n\t\t\ttype : Object,\n\t\t},\n\t},\n\n\tdata : () => ( {\n\t\t// nothing yet\n\t} ),\n\n\tcomputed : {\n\t\ttotal() {\n\t\t\tconst { data } = this.chart;\n\t\t\tconst total    = data.reduce( ( sum, item ) => sum + item.value, 0 );\n\n\t\t\tconsole.log( total );\n\n\t\t\treturn formatNumber( total );\n\t\t},\n\t\tlastUpdated() {\n\t\t\tconst { updatedAt } = this.chart;\n\n\t\t\treturn format( new Date( updatedAt ), 'LLLL do, yyyy' );\n\t\t}\n\t},\n\n\tmounted() {\n\t\tthis.init( this.$refs.svg );\n\t},\n\n\tmethods : {\n\n\t\tdraw() {\n\n\t\t\t// get data range\n\t\t\tconst yValues = this.chart.data.map( datum => datum.value );\n\t\t\tconst range   = this.getDataRange( yValues );\n\n\t\t\tconsole.log( range );\n\t\t\t// draw y-axis labels\n\t\t\tthis.drawAxisIndicators( {\n\t\t\t\taxis           : 'y-right',\n\t\t\t\ttransformLabel : text => formatNumber( text ),\n\t\t\t\tlines          : {\n\t\t\t\t\tnumberOfIndicators         : 5,\n\t\t\t\t\tspaceBetweenLabelsAndLines : 10,\n\t\t\t\t},\n\t\t\t\tcolor : colors.colorPrimary,\n\t\t\t\trange,\n\t\t\t} );\n\n\t\t\t// draw x-axis labels\n\t\t\tconst xAxisData = this.drawAxisIndicators( {\n\t\t\t\taxis                       : 'x-bottom',\n\t\t\t\tvalues                     : this.chart.data,\n\t\t\t\tspaceBetweenLabelsAndChart : 10,\n\t\t\t\tlabelStyle                 : [\n\t\t\t\t\t['font-size', '14px'],\n\t\t\t\t\t['font-weight', '700'],\n\t\t\t\t\t['font-family', '\"Manjari\", sans-serif'],\n\t\t\t\t],\n\t\t\t} );\n\n\t\t\t// draw line and shaded\n\t\t\t// area under chart\n\t\t\tthis.drawShadedLine( xAxisData, range );\n\t\t\tconsole.log( xAxisData );\n\t\t\t// draw points\n\t\t\tthis.drawPoints( xAxisData, range );\n\t\t},\n\n\t\tdrawShadedLine( xAxisData, range ) {\n\t\t\tif ( xAxisData.length < 2 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst [pointOne, pointTwo] = xAxisData\n\t\t\t\t.slice( 0, 2 )\n\t\t\t\t.map( point => ( {\n\t\t\t\t\tx : point.x,\n\t\t\t\t\ty : () => this.getYValue( point.value, range ),\n\t\t\t\t} ) );\n\n\t\t\tconst fOfFirstLine = this.getLinearFunctionFromTwoPoints( pointOne, pointTwo );\n\n\t\t\tconst [secondLastPoint, lastPoint] = xAxisData\n\t\t\t\t.slice( xAxisData.length - 2, xAxisData.length )\n\t\t\t\t.map( point => ( {\n\t\t\t\t\tx : point.x,\n\t\t\t\t\ty : () => this.getYValue( point.value, range ),\n\t\t\t\t} ) );\n\n\t\t\tconst fOfSecondLine = this.getLinearFunctionFromTwoPoints( secondLastPoint, lastPoint );\n\n\t\t\tconst linePoints = xAxisData.map( ( datum, i ) => ( {\n\t\t\t\ty : ( () => {\n\t\t\t\t\tif ( i === 0 ) {\n\t\t\t\t\t\treturn fOfFirstLine( this.l );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( i === xAxisData.length - 1 ) {\n\t\t\t\t\t\treturn fOfSecondLine( this.l + this.aw );\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.getYValue( datum.value, range );\n\t\t\t\t} )(),\n\t\t\t\tx : ( () => {\n\t\t\t\t\tif ( i === 0 ) {\n\t\t\t\t\t\treturn this.l;\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( i === xAxisData.length - 1 ) {\n\t\t\t\t\t\treturn this.l + this.aw;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn datum.x();\n\t\t\t\t} )(),\n\t\t\t} ) );\n\n\t\t\tconst startPoint = {\n\t\t\t\tx : this.l,\n\t\t\t\ty : this.t + this.ah,\n\t\t\t};\n\n\t\t\tconst endPoint = {\n\t\t\t\tx : this.l + this.aw,\n\t\t\t\ty : this.t + this.ah,\n\t\t\t};\n\n\t\t\tconst points = [\n\t\t\t\tstartPoint,\n\t\t\t\t...linePoints,\n\t\t\t\tendPoint,\n\t\t\t];\n\n\t\t\tthis.canvas\n\t\t\t\t.append( 'path' )\n\t\t\t\t.attr( 'd', this.pathFromPoints( points ) )\n\t\t\t\t.style( 'fill', `url(#gradient-${this.id})` ); // look in mark up\n\t\t},\n\n\t\tdrawPoints( xAxisData, range ) {\n\t\t\tconst linePoints = xAxisData.map( datum => ( {\n\t\t\t\tx : datum.x(),\n\t\t\t\ty : this.getYValue( datum.value, range ),\n\t\t\t} ) );\n\n\t\t\tthis.canvas\n\t\t\t\t.append( 'path' )\n\t\t\t\t.attr( 'd', this.pathFromPoints( linePoints, false ) )\n\t\t\t\t.style( 'stroke-width', '4px' )\n\t\t\t\t.style( 'stroke', colors.colorAccent )\n\t\t\t\t.style( 'fill', 'transparent' );\n\n\t\t\tthis.canvas\n\t\t\t\t.selectAll( '.points' )\n\t\t\t\t.data( xAxisData )\n\t\t\t\t.enter()\n\t\t\t\t.append( 'circle' )\n\t\t\t\t.attr( 'cx', d => d.x() )\n\t\t\t\t.attr( 'cy', d => this.getYValue( d.value, range ) )\n\t\t\t\t.attr( 'r', '5' )\n\t\t\t\t.style( 'stroke-width', '4px' )\n\t\t\t\t.style( 'stroke', d => d.color )\n\t\t\t\t.style( 'fill', colors.bgColor );\n\t\t}\n\n\t}\n};\n</script>\n\n<style lang='scss'>\n.line-chart {\n\tdisplay: flex;\n\talign-items: stretch;\n\twidth: 100%;\n\n\taside {\n\t\t// display: flex;\n\t\t// flex-direction: column;\n\t\tjustify-content: space-between;\n\t\t// flex: 1 1 0;\n\n\t\tlegend {\n\t\t\ttext-align: left;\n\n\t\t\th1,\n\t\t\th2 {\n\t\t\t\tdisplay: inline-block;\n\t\t\t\ttext-align: left;\n\t\t\t}\n\n\t\t\th1 {\n\t\t\t\tfont-weight: 700;\n\t\t\t\tcolor: $color-accent;\n\t\t\t}\n\n\t\t\th2 {\n\t\t\t\tfont-family: \"Manjari\", sans-serif;\n\t\t\t\tfont-size: 18px;\n\t\t\t\tfont-weight: 400;\n\t\t\t}\n\t\t}\n\n\t\tfooter p {\n\t\t\tfont-family: 'Manjari', sans-serif;\n\t\t\ttext-align: left;\n\t\t\tfont-size: 12px;\n\n\t\t\tspan {\n\t\t\t\tdisplay: inline-block;\n\t\t\t}\n\t\t}\n\t}\n\n\tsvg {\n\t\tflex: 2 2 0;\n\t}\n}\n</style>\n"],"sourceRoot":"src/components/charts"}]}